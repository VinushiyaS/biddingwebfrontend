{"ast":null,"code":"var _jsxFileName = \"/home/uki-jaffna/biddingweb/frontend/src/components/LeaderDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\neffect;\nexport default function LeaderDashboard() {\n  _s();\n  const [formData, setFormData] = useState({\n    leaderEmail: '',\n    tournamentName: '',\n    teamsCount: '',\n    bidPointsPerTeam: '',\n    teams: [],\n    players: []\n  });\n  const [submittedData, setSubmittedData] = useState(null);\n  const [topBidPlayer, setTopBidPlayer] = useState(null); // State to store top bid player\n\n  // Function to recalculate the remaining bid points for all teams\n  const recalculateRemainingPoints = () => {\n    const updatedTeams = formData.teams.map(team => {\n      const totalBidAmount = formData.players.filter(player => player.team === team.name).reduce((sum, player) => sum + player.bidAmount, 0);\n      const remainingBidPoints = team.bidPoints - totalBidAmount;\n      return {\n        ...team,\n        remainingBidPoints: remainingBidPoints >= 0 ? remainingBidPoints : 0 // Ensure no negative points\n      };\n    });\n    setFormData(prevData => ({\n      ...prevData,\n      teams: updatedTeams\n    }));\n  };\n\n  // Handle changes in form data\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const newValue = name === 'teamsCount' || name === 'bidPointsPerTeam' ? parseInt(value) : value;\n    setFormData(prevData => {\n      let updatedData = {\n        ...prevData,\n        [name]: newValue\n      };\n      if (name === 'teamsCount') {\n        const updatedTeams = Array.from({\n          length: newValue || 0\n        }, (_, index) => {\n          var _prevData$teams$index;\n          return {\n            name: ((_prevData$teams$index = prevData.teams[index]) === null || _prevData$teams$index === void 0 ? void 0 : _prevData$teams$index.name) || '',\n            bidPoints: prevData.bidPointsPerTeam || 0,\n            remainingBidPoints: prevData.bidPointsPerTeam || 0\n          };\n        });\n        updatedData.teams = updatedTeams;\n      }\n      if (name === 'bidPointsPerTeam') {\n        const updatedTeams = prevData.teams.map(team => ({\n          ...team,\n          bidPoints: newValue || 0,\n          remainingBidPoints: newValue || 0\n        }));\n        updatedData.teams = updatedTeams;\n      }\n      return updatedData;\n    });\n  };\n\n  // Handle team name changes\n  const handleTeamChange = (index, value) => {\n    const updatedTeams = [...formData.teams];\n    updatedTeams[index] = {\n      ...updatedTeams[index],\n      name: value\n    };\n    setFormData({\n      ...formData,\n      teams: updatedTeams\n    });\n  };\n\n  // Handle player changes\n  const handlePlayerChange = (index, field, value) => {\n    const updatedPlayers = [...formData.players];\n    updatedPlayers[index] = {\n      ...updatedPlayers[index],\n      [field]: value\n    };\n    setFormData({\n      ...formData,\n      players: updatedPlayers\n    });\n  };\n\n  // Add a new player\n  const addPlayer = () => {\n    setFormData({\n      ...formData,\n      players: [...formData.players, {\n        name: '',\n        photo: null,\n        bidAmount: 0,\n        team: '',\n        done: false\n      }]\n    });\n  };\n\n  // Mark a player as \"Done\"\n  const handleDone = index => {\n    const updatedPlayers = [...formData.players];\n    updatedPlayers[index].done = true;\n    setFormData({\n      ...formData,\n      players: updatedPlayers\n    });\n  };\n\n  // Handle the submission of the form\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/api/auctions/create', formData);\n      const {\n        auction\n      } = response.data;\n      setSubmittedData(auction);\n\n      // Calculate top bid player\n      const topPlayer = auction.players.reduce((maxPlayer, currentPlayer) => {\n        return currentPlayer.bidAmount > maxPlayer.bidAmount ? currentPlayer : maxPlayer;\n      }, auction.players[0]);\n      setTopBidPlayer(topPlayer); // Set the top bid player\n\n      // Reset form data after submission\n      setFormData({\n        leaderEmail: '',\n        tournamentName: '',\n        teamsCount: 0,\n        bidPointsPerTeam: 0,\n        teams: [],\n        players: []\n      });\n    } catch (error) {\n      console.error('Error submitting tournament:', error);\n      alert('There was an error submitting the tournament.');\n    }\n  };\n\n  // Recalculate remaining points every time the formData changes\n  useEffect(() => {\n    recalculateRemainingPoints();\n  }, [formData.players, formData.teams]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leader Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"leaderEmail\",\n        value: formData.leaderEmail,\n        onChange: handleChange,\n        placeholder: \"Leader Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"tournamentName\",\n        value: formData.tournamentName,\n        onChange: handleChange,\n        placeholder: \"Tournament Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"teamsCount\",\n        value: formData.teamsCount,\n        onChange: handleChange,\n        placeholder: \"Number of Teams\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"bidPointsPerTeam\",\n        value: formData.bidPointsPerTeam,\n        onChange: handleChange,\n        placeholder: \"Bid Points Per Team\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Team Names\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), formData.teams && formData.teams.map((team, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: team.name,\n            onChange: e => handleTeamChange(index, e.target.value),\n            placeholder: `Team ${index + 1} Name`,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" - Remaining Points: \", team.remainingBidPoints]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), formData.players && formData.players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: player.name,\n            onChange: e => handlePlayerChange(index, 'name', e.target.value),\n            placeholder: `Player ${index + 1} Name`,\n            required: true,\n            disabled: player.done\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => handlePlayerChange(index, 'photo', e.target.files[0]),\n            disabled: player.done\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), player.photo && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: URL.createObjectURL(player.photo),\n              alt: `Player ${index + 1} Photo`,\n              style: {\n                width: '100px',\n                height: '100px',\n                borderRadius: '50%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: player.team,\n            onChange: e => handlePlayerChange(index, 'team', e.target.value),\n            disabled: player.done,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), formData.teams && formData.teams.map((team, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: team.name,\n              children: team.name\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: player.bidAmount,\n            onChange: e => handlePlayerChange(index, 'bidAmount', parseInt(e.target.value)),\n            placeholder: \"Bid Amount\",\n            disabled: player.done\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), !player.done && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleDone(index),\n            children: \"Mark as Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addPlayer,\n          children: \"Add Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Tournament\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), submittedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tournament Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tournament: \", submittedData.tournamentName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Top Bid Player: \", topBidPlayer === null || topBidPlayer === void 0 ? void 0 : topBidPlayer.name, \" with \", topBidPlayer === null || topBidPlayer === void 0 ? void 0 : topBidPlayer.bidAmount, \" points\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(LeaderDashboard, \"Psr7RwUZVr9qQoWO1xdabghxIdQ=\");\n_c = LeaderDashboard;\nvar _c;\n$RefreshReg$(_c, \"LeaderDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","effect","LeaderDashboard","_s","formData","setFormData","leaderEmail","tournamentName","teamsCount","bidPointsPerTeam","teams","players","submittedData","setSubmittedData","topBidPlayer","setTopBidPlayer","recalculateRemainingPoints","updatedTeams","map","team","totalBidAmount","filter","player","name","reduce","sum","bidAmount","remainingBidPoints","bidPoints","prevData","handleChange","e","value","target","newValue","parseInt","updatedData","Array","from","length","_","index","_prevData$teams$index","handleTeamChange","handlePlayerChange","field","updatedPlayers","addPlayer","photo","done","handleDone","handleSubmit","preventDefault","response","post","auction","data","topPlayer","maxPlayer","currentPlayer","error","console","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","style","marginBottom","disabled","accept","files","src","URL","createObjectURL","alt","width","height","borderRadius","idx","onClick","_c","$RefreshReg$"],"sources":["/home/uki-jaffna/biddingweb/frontend/src/components/LeaderDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\neffect\nexport default function LeaderDashboard() {\n  const [formData, setFormData] = useState({\n    leaderEmail: '',\n    tournamentName: '',\n    teamsCount: '',\n    bidPointsPerTeam: '',\n    teams: [],\n    players: [],\n  });\n\n  const [submittedData, setSubmittedData] = useState(null);\n  const [topBidPlayer, setTopBidPlayer] = useState(null); // State to store top bid player\n\n  // Function to recalculate the remaining bid points for all teams\n  const recalculateRemainingPoints = () => {\n    const updatedTeams = formData.teams.map((team) => {\n      const totalBidAmount = formData.players\n        .filter((player) => player.team === team.name)\n        .reduce((sum, player) => sum + player.bidAmount, 0);\n\n      const remainingBidPoints = team.bidPoints - totalBidAmount;\n      return {\n        ...team,\n        remainingBidPoints: remainingBidPoints >= 0 ? remainingBidPoints : 0, // Ensure no negative points\n      };\n    });\n\n    setFormData((prevData) => ({\n      ...prevData,\n      teams: updatedTeams,\n    }));\n  };\n\n  // Handle changes in form data\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    const newValue = name === 'teamsCount' || name === 'bidPointsPerTeam' ? parseInt(value) : value;\n\n    setFormData((prevData) => {\n      let updatedData = { ...prevData, [name]: newValue };\n\n      if (name === 'teamsCount') {\n        const updatedTeams = Array.from({ length: newValue || 0 }, (_, index) => ({\n          name: prevData.teams[index]?.name || '',\n          bidPoints: prevData.bidPointsPerTeam || 0,\n          remainingBidPoints: prevData.bidPointsPerTeam || 0,\n        }));\n        updatedData.teams = updatedTeams;\n      }\n\n      if (name === 'bidPointsPerTeam') {\n        const updatedTeams = prevData.teams.map((team) => ({\n          ...team,\n          bidPoints: newValue || 0,\n          remainingBidPoints: newValue || 0,\n        }));\n        updatedData.teams = updatedTeams;\n      }\n\n      return updatedData;\n    });\n  };\n\n  // Handle team name changes\n  const handleTeamChange = (index, value) => {\n    const updatedTeams = [...formData.teams];\n    updatedTeams[index] = {\n      ...updatedTeams[index],\n      name: value,\n    };\n    setFormData({\n      ...formData,\n      teams: updatedTeams,\n    });\n  };\n\n  // Handle player changes\n  const handlePlayerChange = (index, field, value) => {\n    const updatedPlayers = [...formData.players];\n    updatedPlayers[index] = {\n      ...updatedPlayers[index],\n      [field]: value,\n    };\n    setFormData({\n      ...formData,\n      players: updatedPlayers,\n    });\n  };\n\n  // Add a new player\n  const addPlayer = () => {\n    setFormData({\n      ...formData,\n      players: [...formData.players, { name: '', photo: null, bidAmount: 0, team: '', done: false }],\n    });\n  };\n\n  // Mark a player as \"Done\"\n  const handleDone = (index) => {\n    const updatedPlayers = [...formData.players];\n    updatedPlayers[index].done = true;\n    setFormData({\n      ...formData,\n      players: updatedPlayers,\n    });\n  };\n\n  // Handle the submission of the form\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/auctions/create', formData);\n      const { auction } = response.data;\n      setSubmittedData(auction);\n\n      // Calculate top bid player\n      const topPlayer = auction.players.reduce((maxPlayer, currentPlayer) => {\n        return currentPlayer.bidAmount > maxPlayer.bidAmount ? currentPlayer : maxPlayer;\n      }, auction.players[0]);\n\n      setTopBidPlayer(topPlayer); // Set the top bid player\n\n      // Reset form data after submission\n      setFormData({\n        leaderEmail: '',\n        tournamentName: '',\n        teamsCount: 0,\n        bidPointsPerTeam: 0,\n        teams: [],\n        players: [],\n      });\n    } catch (error) {\n      console.error('Error submitting tournament:', error);\n      alert('There was an error submitting the tournament.');\n    }\n  };\n\n  // Recalculate remaining points every time the formData changes\n  useEffect(() => {\n    recalculateRemainingPoints();\n  }, [formData.players, formData.teams]);\n\n  return (\n    <div>\n      <h1>Leader Dashboard</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          name=\"leaderEmail\"\n          value={formData.leaderEmail}\n          onChange={handleChange}\n          placeholder=\"Leader Email\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"tournamentName\"\n          value={formData.tournamentName}\n          onChange={handleChange}\n          placeholder=\"Tournament Name\"\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"teamsCount\"\n          value={formData.teamsCount}\n          onChange={handleChange}\n          placeholder=\"Number of Teams\"\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"bidPointsPerTeam\"\n          value={formData.bidPointsPerTeam}\n          onChange={handleChange}\n          placeholder=\"Bid Points Per Team\"\n          required\n        />\n\n        <div>\n          <h3>Team Names</h3>\n          {formData.teams && formData.teams.map((team, index) => (\n            <div key={index}>\n              <input\n                type=\"text\"\n                value={team.name}\n                onChange={(e) => handleTeamChange(index, e.target.value)}\n                placeholder={`Team ${index + 1} Name`}\n                required\n              />\n              <span> - Remaining Points: {team.remainingBidPoints}</span>\n            </div>\n          ))}\n        </div>\n\n        <div>\n          <h3>Players</h3>\n          {formData.players && formData.players.map((player, index) => (\n            <div key={index} style={{ marginBottom: '10px' }}>\n              <input\n                type=\"text\"\n                value={player.name}\n                onChange={(e) => handlePlayerChange(index, 'name', e.target.value)}\n                placeholder={`Player ${index + 1} Name`}\n                required\n                disabled={player.done}\n              />\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={(e) => handlePlayerChange(index, 'photo', e.target.files[0])}\n                disabled={player.done}\n              />\n              {player.photo && (\n                <div>\n                  <img\n                    src={URL.createObjectURL(player.photo)}\n                    alt={`Player ${index + 1} Photo`}\n                    style={{ width: '100px', height: '100px', borderRadius: '50%' }}\n                  />\n                </div>\n              )}\n              <select\n                value={player.team}\n                onChange={(e) => handlePlayerChange(index, 'team', e.target.value)}\n                disabled={player.done}\n              >\n                <option value=\"\">Select Team</option>\n                {formData.teams && formData.teams.map((team, idx) => (\n                  <option key={idx} value={team.name}>{team.name}</option>\n                ))}\n              </select>\n              <input\n                type=\"number\"\n                value={player.bidAmount}\n                onChange={(e) => handlePlayerChange(index, 'bidAmount', parseInt(e.target.value))}\n                placeholder=\"Bid Amount\"\n                disabled={player.done}\n              />\n              {!player.done && (\n                <button type=\"button\" onClick={() => handleDone(index)}>Mark as Done</button>\n              )}\n            </div>\n          ))}\n          <button type=\"button\" onClick={addPlayer}>Add Player</button>\n        </div>\n\n        <button type=\"submit\">Submit Tournament</button>\n      </form>\n\n      {submittedData && (\n        <div>\n          <h3>Tournament Details</h3>\n          <p>Tournament: {submittedData.tournamentName}</p>\n          <p>Top Bid Player: {topBidPlayer?.name} with {topBidPlayer?.bidAmount} points</p>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}