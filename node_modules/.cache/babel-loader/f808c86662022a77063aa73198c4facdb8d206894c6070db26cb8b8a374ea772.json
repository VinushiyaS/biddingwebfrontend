{"ast":null,"code":"var _jsxFileName = \"/home/uki-jaffna/biddingweb/frontend/src/components/LeaderDashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios'; // Importing axios\n// import { fetchLeaderAuctions } from '../api';\n\n// const LeaderDashboard = () => {\n//     const [auctions, setAuctions] = useState([]);\n//     const [showForm, setShowForm] = useState(false);\n//     const [newAuction, setNewAuction] = useState({\n//         tournamentName: '',\n//         tournamentDate: '',\n//         numTeams: '',\n//         totalPoints: '',\n//         players: []\n//     });\n//     const [player, setPlayer] = useState({ name: '', number: '', picture: '' });\n//     const [image, setImage] = useState(null);\n\n//     // Fetch existing auctions for this leader on component mount\n//     useEffect(() => {\n//         const getLeaderAuctions = async () => {\n//             const leaderEmail = localStorage.getItem('userEmail'); // Retrieve leader email from local storage\n//             if (!leaderEmail) {\n//                 console.error('Leader email not found in local storage');\n//                 return;\n//             }\n//             try {\n//                 const { data } = await fetchLeaderAuctions(leaderEmail);\n//                 setAuctions(data);\n//             } catch (error) {\n//                 console.error('Error fetching auctions:', error);\n//             }\n//         };\n//         getLeaderAuctions();\n//     }, []);\n\n//     // Handle changes for auction form\n//     const handleAuctionChange = (e) => {\n//         setNewAuction({ ...newAuction, [e.target.name]: e.target.value });\n//     };\n\n//     // Handle changes for adding players to the auction\n//     const handlePlayerChange = (e) => {\n//         setPlayer({ ...player, [e.target.name]: e.target.value });\n//     };\n\n//     // Add a player to the players array\n//     const addPlayer = () => {\n//         if (!player.name || !player.number) {\n//             alert(\"Please fill out all player fields.\");\n//             return;\n//         }\n//         setNewAuction((prev) => ({\n//             ...prev,\n//             players: [...prev.players, player]\n//         }));\n//         setPlayer({ name: '', number: '', picture: '' }); // Reset player form\n//     };\n\n//     const handleImageChange = (e) => {\n//         setImage(e.target.files[0]);\n//     };\n\n//     const handleCreateAuction = async (e) => {\n//         e.preventDefault();\n\n//         // Create FormData to send to the backend\n//         const formData = new FormData();\n//         formData.append('leaderEmail', localStorage.getItem('userEmail')); // Add leader email\n//         formData.append('tournamentName', newAuction.tournamentName);\n//         formData.append('tournamentDate', newAuction.tournamentDate);\n//         formData.append('teamsCount', newAuction.numTeams);\n//         formData.append('totalPointsPerTeam', newAuction.totalPoints);\n//         formData.append('image', image); // Include the image file in the FormData\n//         formData.append('players', JSON.stringify(newAuction.players)); // Include players as a stringified JSON\n\n//         try {\n//             // Send FormData to the backend using axios\n//             const response = await axios.post('http://localhost:5000/api/auctions/create-auction', formData);\n\n//             const result = response.data;\n\n//             if (response.status === 200) {\n//                 setAuctions([...auctions, result]);\n//                 alert('Auction created successfully!');\n//                 setShowForm(false);\n//             } else {\n//                 alert('Failed to create auction');\n//                 console.error('Error:', result);\n//             }\n//         } catch (error) {\n//             console.error('Error creating auction:', error);\n//             alert('Error creating auction');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Leader Dashboard</h2>\n//             <button onClick={() => setShowForm(!showForm)}>\n//                 {showForm ? 'Cancel' : 'Create New Auction'}\n//             </button>\n//             <button onClick={() => setShowForm(false)}>View My Auctions</button>\n\n//             {/* Auction creation form */}\n//             {showForm && (\n//                 <form onSubmit={handleCreateAuction} encType=\"multipart/form-data\">\n//                     <h3>Create New Auction</h3>\n//                     <input\n//                         type=\"text\"\n//                         name=\"tournamentName\"\n//                         placeholder=\"Tournament Name\"\n//                         value={newAuction.tournamentName}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"date\"\n//                         name=\"tournamentDate\"\n//                         value={newAuction.tournamentDate}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         name=\"numTeams\"\n//                         placeholder=\"Number of Teams\"\n//                         value={newAuction.numTeams}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         name=\"totalPoints\"\n//                         placeholder=\"Total Points for Teams\"\n//                         value={newAuction.totalPoints}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n\n//                     <h4>Add Players</h4>\n//                     <input\n//                         type=\"text\"\n//                         name=\"name\"\n//                         placeholder=\"Player Name\"\n//                         value={player.name}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         name=\"number\"\n//                         placeholder=\"Player Number\"\n//                         value={player.number}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         name=\"picture\"\n//                         placeholder=\"Player Picture URL\"\n//                         value={player.picture}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input type=\"file\" onChange={handleImageChange} />\n\n//                     <button type=\"button\" onClick={addPlayer}>Add Player</button>\n\n//                     <button type=\"submit\">Create Auction</button>\n//                 </form>\n//             )}\n\n//             <h3>Existing Auctions</h3>\n//             <ul>\n//                 {auctions.map((auction) => (\n//                     <li key={auction._id}>\n//                         {auction.tournamentName} - {auction.tournamentDate}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default LeaderDashboard;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LeaderDashboard() {\n  _s();\n  const [auctionData, setAuctionData] = useState({\n    leaderEmail: '',\n    tournamentName: '',\n    tournamentDate: '',\n    teamsCount: 0,\n    totalPointsPerTeam: 0,\n    players: [{\n      name: '',\n      number: 0,\n      team: '',\n      bidPoints: 0,\n      profilePic: ''\n    }],\n    image: null\n  });\n\n  // Function to handle input change\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAuctionData({\n      ...auctionData,\n      [name]: value\n    });\n  };\n\n  // Handle player input change for the first player (extend for more players)\n  const handlePlayerChange = (index, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedPlayers = [...auctionData.players];\n    updatedPlayers[index][name] = value;\n    setAuctionData({\n      ...auctionData,\n      players: updatedPlayers\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('leaderEmail', auctionData.leaderEmail);\n      formData.append('tournamentName', auctionData.tournamentName);\n      formData.append('tournamentDate', auctionData.tournamentDate);\n      formData.append('teamsCount', auctionData.teamsCount);\n      formData.append('totalPointsPerTeam', auctionData.totalPointsPerTeam);\n      formData.append('players', JSON.stringify(auctionData.players)); // Send players as a string\n\n      // Add image if available\n      if (auctionData.image) {\n        formData.append('image', auctionData.image);\n      }\n      const response = await axios.post('http://localhost:5000/api/auctions/create-auction', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Handle response after success\n      console.log('Auction created successfully', response.data);\n    } catch (error) {\n      console.error('Error creating auction:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create New Auction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"leaderEmail\",\n        value: auctionData.leaderEmail,\n        onChange: handleChange,\n        placeholder: \"Leader Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"tournamentName\",\n        value: auctionData.tournamentName,\n        onChange: handleChange,\n        placeholder: \"Tournament Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"tournamentDate\",\n        value: auctionData.tournamentDate,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"teamsCount\",\n        value: auctionData.teamsCount,\n        onChange: handleChange,\n        placeholder: \"Teams Count\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"totalPointsPerTeam\",\n        value: auctionData.totalPointsPerTeam,\n        onChange: handleChange,\n        placeholder: \"Total Points Per Team\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Player Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), auctionData.players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: player.name,\n            onChange: e => handlePlayerChange(index, e),\n            placeholder: \"Player Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"number\",\n            value: player.number,\n            onChange: e => handlePlayerChange(index, e),\n            placeholder: \"Player Number\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"team\",\n            value: player.team,\n            onChange: e => handlePlayerChange(index, e),\n            placeholder: \"Player Team\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"bidPoints\",\n            value: player.bidPoints,\n            onChange: e => handlePlayerChange(index, e),\n            placeholder: \"Bid Points\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"profilePic\",\n            value: player.profilePic,\n            onChange: e => handlePlayerChange(index, e),\n            placeholder: \"Profile Picture URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        onChange: e => setAuctionData({\n          ...auctionData,\n          image: e.target.files[0]\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Auction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n_s(LeaderDashboard, \"N6ZBu1ekOCtWVzhw7zNWeUizf1k=\");\n_c = LeaderDashboard;\nvar _c;\n$RefreshReg$(_c, \"LeaderDashboard\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LeaderDashboard","_s","auctionData","setAuctionData","leaderEmail","tournamentName","tournamentDate","teamsCount","totalPointsPerTeam","players","name","number","team","bidPoints","profilePic","image","handleChange","e","value","target","handlePlayerChange","index","updatedPlayers","handleSubmit","preventDefault","formData","FormData","append","JSON","stringify","response","post","headers","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","map","player","files","_c","$RefreshReg$"],"sources":["/home/uki-jaffna/biddingweb/frontend/src/components/LeaderDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios'; // Importing axios\n// import { fetchLeaderAuctions } from '../api';\n\n// const LeaderDashboard = () => {\n//     const [auctions, setAuctions] = useState([]);\n//     const [showForm, setShowForm] = useState(false);\n//     const [newAuction, setNewAuction] = useState({\n//         tournamentName: '',\n//         tournamentDate: '',\n//         numTeams: '',\n//         totalPoints: '',\n//         players: []\n//     });\n//     const [player, setPlayer] = useState({ name: '', number: '', picture: '' });\n//     const [image, setImage] = useState(null);\n\n//     // Fetch existing auctions for this leader on component mount\n//     useEffect(() => {\n//         const getLeaderAuctions = async () => {\n//             const leaderEmail = localStorage.getItem('userEmail'); // Retrieve leader email from local storage\n//             if (!leaderEmail) {\n//                 console.error('Leader email not found in local storage');\n//                 return;\n//             }\n//             try {\n//                 const { data } = await fetchLeaderAuctions(leaderEmail);\n//                 setAuctions(data);\n//             } catch (error) {\n//                 console.error('Error fetching auctions:', error);\n//             }\n//         };\n//         getLeaderAuctions();\n//     }, []);\n\n//     // Handle changes for auction form\n//     const handleAuctionChange = (e) => {\n//         setNewAuction({ ...newAuction, [e.target.name]: e.target.value });\n//     };\n\n//     // Handle changes for adding players to the auction\n//     const handlePlayerChange = (e) => {\n//         setPlayer({ ...player, [e.target.name]: e.target.value });\n//     };\n\n//     // Add a player to the players array\n//     const addPlayer = () => {\n//         if (!player.name || !player.number) {\n//             alert(\"Please fill out all player fields.\");\n//             return;\n//         }\n//         setNewAuction((prev) => ({\n//             ...prev,\n//             players: [...prev.players, player]\n//         }));\n//         setPlayer({ name: '', number: '', picture: '' }); // Reset player form\n//     };\n\n//     const handleImageChange = (e) => {\n//         setImage(e.target.files[0]);\n//     };\n\n//     const handleCreateAuction = async (e) => {\n//         e.preventDefault();\n\n//         // Create FormData to send to the backend\n//         const formData = new FormData();\n//         formData.append('leaderEmail', localStorage.getItem('userEmail')); // Add leader email\n//         formData.append('tournamentName', newAuction.tournamentName);\n//         formData.append('tournamentDate', newAuction.tournamentDate);\n//         formData.append('teamsCount', newAuction.numTeams);\n//         formData.append('totalPointsPerTeam', newAuction.totalPoints);\n//         formData.append('image', image); // Include the image file in the FormData\n//         formData.append('players', JSON.stringify(newAuction.players)); // Include players as a stringified JSON\n\n//         try {\n//             // Send FormData to the backend using axios\n//             const response = await axios.post('http://localhost:5000/api/auctions/create-auction', formData);\n\n//             const result = response.data;\n\n//             if (response.status === 200) {\n//                 setAuctions([...auctions, result]);\n//                 alert('Auction created successfully!');\n//                 setShowForm(false);\n//             } else {\n//                 alert('Failed to create auction');\n//                 console.error('Error:', result);\n//             }\n//         } catch (error) {\n//             console.error('Error creating auction:', error);\n//             alert('Error creating auction');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Leader Dashboard</h2>\n//             <button onClick={() => setShowForm(!showForm)}>\n//                 {showForm ? 'Cancel' : 'Create New Auction'}\n//             </button>\n//             <button onClick={() => setShowForm(false)}>View My Auctions</button>\n\n//             {/* Auction creation form */}\n//             {showForm && (\n//                 <form onSubmit={handleCreateAuction} encType=\"multipart/form-data\">\n//                     <h3>Create New Auction</h3>\n//                     <input\n//                         type=\"text\"\n//                         name=\"tournamentName\"\n//                         placeholder=\"Tournament Name\"\n//                         value={newAuction.tournamentName}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"date\"\n//                         name=\"tournamentDate\"\n//                         value={newAuction.tournamentDate}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         name=\"numTeams\"\n//                         placeholder=\"Number of Teams\"\n//                         value={newAuction.numTeams}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         name=\"totalPoints\"\n//                         placeholder=\"Total Points for Teams\"\n//                         value={newAuction.totalPoints}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n\n//                     <h4>Add Players</h4>\n//                     <input\n//                         type=\"text\"\n//                         name=\"name\"\n//                         placeholder=\"Player Name\"\n//                         value={player.name}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         name=\"number\"\n//                         placeholder=\"Player Number\"\n//                         value={player.number}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         name=\"picture\"\n//                         placeholder=\"Player Picture URL\"\n//                         value={player.picture}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input type=\"file\" onChange={handleImageChange} />\n\n//                     <button type=\"button\" onClick={addPlayer}>Add Player</button>\n\n//                     <button type=\"submit\">Create Auction</button>\n//                 </form>\n//             )}\n\n//             <h3>Existing Auctions</h3>\n//             <ul>\n//                 {auctions.map((auction) => (\n//                     <li key={auction._id}>\n//                         {auction.tournamentName} - {auction.tournamentDate}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default LeaderDashboard;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function LeaderDashboard() {\n  const [auctionData, setAuctionData] = useState({\n    leaderEmail: '',\n    tournamentName: '',\n    tournamentDate: '',\n    teamsCount: 0,\n    totalPointsPerTeam: 0,\n    players: [\n      {\n        name: '',\n        number: 0,\n        team: '',\n        bidPoints: 0,\n        profilePic: '',\n      },\n    ],\n    image: null,\n  });\n\n  // Function to handle input change\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setAuctionData({\n      ...auctionData,\n      [name]: value,\n    });\n  };\n\n  // Handle player input change for the first player (extend for more players)\n  const handlePlayerChange = (index, e) => {\n    const { name, value } = e.target;\n    const updatedPlayers = [...auctionData.players];\n    updatedPlayers[index][name] = value;\n\n    setAuctionData({\n      ...auctionData,\n      players: updatedPlayers,\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const formData = new FormData();\n      formData.append('leaderEmail', auctionData.leaderEmail);\n      formData.append('tournamentName', auctionData.tournamentName);\n      formData.append('tournamentDate', auctionData.tournamentDate);\n      formData.append('teamsCount', auctionData.teamsCount);\n      formData.append('totalPointsPerTeam', auctionData.totalPointsPerTeam);\n      formData.append('players', JSON.stringify(auctionData.players)); // Send players as a string\n\n      // Add image if available\n      if (auctionData.image) {\n        formData.append('image', auctionData.image);\n      }\n\n      const response = await axios.post('http://localhost:5000/api/auctions/create-auction', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      // Handle response after success\n      console.log('Auction created successfully', response.data);\n    } catch (error) {\n      console.error('Error creating auction:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Create New Auction</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          name=\"leaderEmail\"\n          value={auctionData.leaderEmail}\n          onChange={handleChange}\n          placeholder=\"Leader Email\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"tournamentName\"\n          value={auctionData.tournamentName}\n          onChange={handleChange}\n          placeholder=\"Tournament Name\"\n          required\n        />\n        <input\n          type=\"date\"\n          name=\"tournamentDate\"\n          value={auctionData.tournamentDate}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"teamsCount\"\n          value={auctionData.teamsCount}\n          onChange={handleChange}\n          placeholder=\"Teams Count\"\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"totalPointsPerTeam\"\n          value={auctionData.totalPointsPerTeam}\n          onChange={handleChange}\n          placeholder=\"Total Points Per Team\"\n          required\n        />\n\n        {/* Player Information Section */}\n        <div>\n          <h3>Player Info</h3>\n          {auctionData.players.map((player, index) => (\n            <div key={index}>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={player.name}\n                onChange={(e) => handlePlayerChange(index, e)}\n                placeholder=\"Player Name\"\n                required\n              />\n              <input\n                type=\"number\"\n                name=\"number\"\n                value={player.number}\n                onChange={(e) => handlePlayerChange(index, e)}\n                placeholder=\"Player Number\"\n                required\n              />\n              <input\n                type=\"text\"\n                name=\"team\"\n                value={player.team}\n                onChange={(e) => handlePlayerChange(index, e)}\n                placeholder=\"Player Team\"\n                required\n              />\n              <input\n                type=\"number\"\n                name=\"bidPoints\"\n                value={player.bidPoints}\n                onChange={(e) => handlePlayerChange(index, e)}\n                placeholder=\"Bid Points\"\n                required\n              />\n              <input\n                type=\"text\"\n                name=\"profilePic\"\n                value={player.profilePic}\n                onChange={(e) => handlePlayerChange(index, e)}\n                placeholder=\"Profile Picture URL\"\n              />\n            </div>\n          ))}\n        </div>\n\n        <input\n          type=\"file\"\n          name=\"image\"\n          onChange={(e) => setAuctionData({ ...auctionData, image: e.target.files[0] })}\n        />\n\n        <button type=\"submit\">Create Auction</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC;IAC7CQ,WAAW,EAAE,EAAE;IACfC,cAAc,EAAE,EAAE;IAClBC,cAAc,EAAE,EAAE;IAClBC,UAAU,EAAE,CAAC;IACbC,kBAAkB,EAAE,CAAC;IACrBC,OAAO,EAAE,CACP;MACEC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}