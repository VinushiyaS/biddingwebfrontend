{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios'; // Importing axios\n// import { fetchLeaderAuctions } from '../api';\n\n// const LeaderDashboard = () => {\n//     const [auctions, setAuctions] = useState([]);\n//     const [showForm, setShowForm] = useState(false);\n//     const [newAuction, setNewAuction] = useState({\n//         tournamentName: '',\n//         tournamentDate: '',\n//         numTeams: '',\n//         totalPoints: '',\n//         players: []\n//     });\n//     const [player, setPlayer] = useState({ name: '', number: '', picture: '' });\n//     const [image, setImage] = useState(null);\n\n//     // Fetch existing auctions for this leader on component mount\n//     useEffect(() => {\n//         const getLeaderAuctions = async () => {\n//             const leaderEmail = localStorage.getItem('userEmail'); // Retrieve leader email from local storage\n//             if (!leaderEmail) {\n//                 console.error('Leader email not found in local storage');\n//                 return;\n//             }\n//             try {\n//                 const { data } = await fetchLeaderAuctions(leaderEmail);\n//                 setAuctions(data);\n//             } catch (error) {\n//                 console.error('Error fetching auctions:', error);\n//             }\n//         };\n//         getLeaderAuctions();\n//     }, []);\n\n//     // Handle changes for auction form\n//     const handleAuctionChange = (e) => {\n//         setNewAuction({ ...newAuction, [e.target.name]: e.target.value });\n//     };\n\n//     // Handle changes for adding players to the auction\n//     const handlePlayerChange = (e) => {\n//         setPlayer({ ...player, [e.target.name]: e.target.value });\n//     };\n\n//     // Add a player to the players array\n//     const addPlayer = () => {\n//         if (!player.name || !player.number) {\n//             alert(\"Please fill out all player fields.\");\n//             return;\n//         }\n//         setNewAuction((prev) => ({\n//             ...prev,\n//             players: [...prev.players, player]\n//         }));\n//         setPlayer({ name: '', number: '', picture: '' }); // Reset player form\n//     };\n\n//     const handleImageChange = (e) => {\n//         setImage(e.target.files[0]);\n//     };\n\n//     const handleCreateAuction = async (e) => {\n//         e.preventDefault();\n\n//         // Create FormData to send to the backend\n//         const formData = new FormData();\n//         formData.append('leaderEmail', localStorage.getItem('userEmail')); // Add leader email\n//         formData.append('tournamentName', newAuction.tournamentName);\n//         formData.append('tournamentDate', newAuction.tournamentDate);\n//         formData.append('teamsCount', newAuction.numTeams);\n//         formData.append('totalPointsPerTeam', newAuction.totalPoints);\n//         formData.append('image', image); // Include the image file in the FormData\n//         formData.append('players', JSON.stringify(newAuction.players)); // Include players as a stringified JSON\n\n//         try {\n//             // Send FormData to the backend using axios\n//             const response = await axios.post('http://localhost:5000/api/auctions/create-auction', formData);\n\n//             const result = response.data;\n\n//             if (response.status === 200) {\n//                 setAuctions([...auctions, result]);\n//                 alert('Auction created successfully!');\n//                 setShowForm(false);\n//             } else {\n//                 alert('Failed to create auction');\n//                 console.error('Error:', result);\n//             }\n//         } catch (error) {\n//             console.error('Error creating auction:', error);\n//             alert('Error creating auction');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Leader Dashboard</h2>\n//             <button onClick={() => setShowForm(!showForm)}>\n//                 {showForm ? 'Cancel' : 'Create New Auction'}\n//             </button>\n//             <button onClick={() => setShowForm(false)}>View My Auctions</button>\n\n//             {/* Auction creation form */}\n//             {showForm && (\n//                 <form onSubmit={handleCreateAuction} encType=\"multipart/form-data\">\n//                     <h3>Create New Auction</h3>\n//                     <input\n//                         type=\"text\"\n//                         name=\"tournamentName\"\n//                         placeholder=\"Tournament Name\"\n//                         value={newAuction.tournamentName}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"date\"\n//                         name=\"tournamentDate\"\n//                         value={newAuction.tournamentDate}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         name=\"numTeams\"\n//                         placeholder=\"Number of Teams\"\n//                         value={newAuction.numTeams}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         name=\"totalPoints\"\n//                         placeholder=\"Total Points for Teams\"\n//                         value={newAuction.totalPoints}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n\n//                     <h4>Add Players</h4>\n//                     <input\n//                         type=\"text\"\n//                         name=\"name\"\n//                         placeholder=\"Player Name\"\n//                         value={player.name}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         name=\"number\"\n//                         placeholder=\"Player Number\"\n//                         value={player.number}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         name=\"picture\"\n//                         placeholder=\"Player Picture URL\"\n//                         value={player.picture}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input type=\"file\" onChange={handleImageChange} />\n\n//                     <button type=\"button\" onClick={addPlayer}>Add Player</button>\n\n//                     <button type=\"submit\">Create Auction</button>\n//                 </form>\n//             )}\n\n//             <h3>Existing Auctions</h3>\n//             <ul>\n//                 {auctions.map((auction) => (\n//                     <li key={auction._id}>\n//                         {auction.tournamentName} - {auction.tournamentDate}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default LeaderDashboard;","map":{"version":3,"names":[],"sources":["/home/uki-jaffna/biddingweb/frontend/src/components/LeaderDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios'; // Importing axios\n// import { fetchLeaderAuctions } from '../api';\n\n// const LeaderDashboard = () => {\n//     const [auctions, setAuctions] = useState([]);\n//     const [showForm, setShowForm] = useState(false);\n//     const [newAuction, setNewAuction] = useState({\n//         tournamentName: '',\n//         tournamentDate: '',\n//         numTeams: '',\n//         totalPoints: '',\n//         players: []\n//     });\n//     const [player, setPlayer] = useState({ name: '', number: '', picture: '' });\n//     const [image, setImage] = useState(null);\n\n//     // Fetch existing auctions for this leader on component mount\n//     useEffect(() => {\n//         const getLeaderAuctions = async () => {\n//             const leaderEmail = localStorage.getItem('userEmail'); // Retrieve leader email from local storage\n//             if (!leaderEmail) {\n//                 console.error('Leader email not found in local storage');\n//                 return;\n//             }\n//             try {\n//                 const { data } = await fetchLeaderAuctions(leaderEmail);\n//                 setAuctions(data);\n//             } catch (error) {\n//                 console.error('Error fetching auctions:', error);\n//             }\n//         };\n//         getLeaderAuctions();\n//     }, []);\n\n//     // Handle changes for auction form\n//     const handleAuctionChange = (e) => {\n//         setNewAuction({ ...newAuction, [e.target.name]: e.target.value });\n//     };\n\n//     // Handle changes for adding players to the auction\n//     const handlePlayerChange = (e) => {\n//         setPlayer({ ...player, [e.target.name]: e.target.value });\n//     };\n\n//     // Add a player to the players array\n//     const addPlayer = () => {\n//         if (!player.name || !player.number) {\n//             alert(\"Please fill out all player fields.\");\n//             return;\n//         }\n//         setNewAuction((prev) => ({\n//             ...prev,\n//             players: [...prev.players, player]\n//         }));\n//         setPlayer({ name: '', number: '', picture: '' }); // Reset player form\n//     };\n\n//     const handleImageChange = (e) => {\n//         setImage(e.target.files[0]);\n//     };\n\n//     const handleCreateAuction = async (e) => {\n//         e.preventDefault();\n\n//         // Create FormData to send to the backend\n//         const formData = new FormData();\n//         formData.append('leaderEmail', localStorage.getItem('userEmail')); // Add leader email\n//         formData.append('tournamentName', newAuction.tournamentName);\n//         formData.append('tournamentDate', newAuction.tournamentDate);\n//         formData.append('teamsCount', newAuction.numTeams);\n//         formData.append('totalPointsPerTeam', newAuction.totalPoints);\n//         formData.append('image', image); // Include the image file in the FormData\n//         formData.append('players', JSON.stringify(newAuction.players)); // Include players as a stringified JSON\n\n//         try {\n//             // Send FormData to the backend using axios\n//             const response = await axios.post('http://localhost:5000/api/auctions/create-auction', formData);\n\n//             const result = response.data;\n\n//             if (response.status === 200) {\n//                 setAuctions([...auctions, result]);\n//                 alert('Auction created successfully!');\n//                 setShowForm(false);\n//             } else {\n//                 alert('Failed to create auction');\n//                 console.error('Error:', result);\n//             }\n//         } catch (error) {\n//             console.error('Error creating auction:', error);\n//             alert('Error creating auction');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Leader Dashboard</h2>\n//             <button onClick={() => setShowForm(!showForm)}>\n//                 {showForm ? 'Cancel' : 'Create New Auction'}\n//             </button>\n//             <button onClick={() => setShowForm(false)}>View My Auctions</button>\n\n//             {/* Auction creation form */}\n//             {showForm && (\n//                 <form onSubmit={handleCreateAuction} encType=\"multipart/form-data\">\n//                     <h3>Create New Auction</h3>\n//                     <input\n//                         type=\"text\"\n//                         name=\"tournamentName\"\n//                         placeholder=\"Tournament Name\"\n//                         value={newAuction.tournamentName}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"date\"\n//                         name=\"tournamentDate\"\n//                         value={newAuction.tournamentDate}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         name=\"numTeams\"\n//                         placeholder=\"Number of Teams\"\n//                         value={newAuction.numTeams}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         name=\"totalPoints\"\n//                         placeholder=\"Total Points for Teams\"\n//                         value={newAuction.totalPoints}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n\n//                     <h4>Add Players</h4>\n//                     <input\n//                         type=\"text\"\n//                         name=\"name\"\n//                         placeholder=\"Player Name\"\n//                         value={player.name}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         name=\"number\"\n//                         placeholder=\"Player Number\"\n//                         value={player.number}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         name=\"picture\"\n//                         placeholder=\"Player Picture URL\"\n//                         value={player.picture}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input type=\"file\" onChange={handleImageChange} />\n\n//                     <button type=\"button\" onClick={addPlayer}>Add Player</button>\n\n//                     <button type=\"submit\">Create Auction</button>\n//                 </form>\n//             )}\n\n//             <h3>Existing Auctions</h3>\n//             <ul>\n//                 {auctions.map((auction) => (\n//                     <li key={auction._id}>\n//                         {auction.tournamentName} - {auction.tournamentDate}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default LeaderDashboard;\n\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}