{"ast":null,"code":"var _jsxFileName = \"/home/uki-jaffna/biddingweb/frontend/src/components/LeaderDashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios'; // Importing axios\n// import { fetchLeaderAuctions } from '../api';\n\n// const LeaderDashboard = () => {\n//     const [auctions, setAuctions] = useState([]);\n//     const [showForm, setShowForm] = useState(false);\n//     const [newAuction, setNewAuction] = useState({\n//         tournamentName: '',\n//         tournamentDate: '',\n//         numTeams: '',\n//         totalPoints: '',\n//         players: []\n//     });\n//     const [player, setPlayer] = useState({ name: '', number: '', picture: '' });\n//     const [image, setImage] = useState(null);\n\n//     // Fetch existing auctions for this leader on component mount\n//     useEffect(() => {\n//         const getLeaderAuctions = async () => {\n//             const leaderEmail = localStorage.getItem('userEmail'); // Retrieve leader email from local storage\n//             if (!leaderEmail) {\n//                 console.error('Leader email not found in local storage');\n//                 return;\n//             }\n//             try {\n//                 const { data } = await fetchLeaderAuctions(leaderEmail);\n//                 setAuctions(data);\n//             } catch (error) {\n//                 console.error('Error fetching auctions:', error);\n//             }\n//         };\n//         getLeaderAuctions();\n//     }, []);\n\n//     // Handle changes for auction form\n//     const handleAuctionChange = (e) => {\n//         setNewAuction({ ...newAuction, [e.target.name]: e.target.value });\n//     };\n\n//     // Handle changes for adding players to the auction\n//     const handlePlayerChange = (e) => {\n//         setPlayer({ ...player, [e.target.name]: e.target.value });\n//     };\n\n//     // Add a player to the players array\n//     const addPlayer = () => {\n//         if (!player.name || !player.number) {\n//             alert(\"Please fill out all player fields.\");\n//             return;\n//         }\n//         setNewAuction((prev) => ({\n//             ...prev,\n//             players: [...prev.players, player]\n//         }));\n//         setPlayer({ name: '', number: '', picture: '' }); // Reset player form\n//     };\n\n//     const handleImageChange = (e) => {\n//         setImage(e.target.files[0]);\n//     };\n\n//     const handleCreateAuction = async (e) => {\n//         e.preventDefault();\n\n//         // Create FormData to send to the backend\n//         const formData = new FormData();\n//         formData.append('leaderEmail', localStorage.getItem('userEmail')); // Add leader email\n//         formData.append('tournamentName', newAuction.tournamentName);\n//         formData.append('tournamentDate', newAuction.tournamentDate);\n//         formData.append('teamsCount', newAuction.numTeams);\n//         formData.append('totalPointsPerTeam', newAuction.totalPoints);\n//         formData.append('image', image); // Include the image file in the FormData\n//         formData.append('players', JSON.stringify(newAuction.players)); // Include players as a stringified JSON\n\n//         try {\n//             // Send FormData to the backend using axios\n//             const response = await axios.post('http://localhost:5000/api/auctions/create-auction', formData);\n\n//             const result = response.data;\n\n//             if (response.status === 200) {\n//                 setAuctions([...auctions, result]);\n//                 alert('Auction created successfully!');\n//                 setShowForm(false);\n//             } else {\n//                 alert('Failed to create auction');\n//                 console.error('Error:', result);\n//             }\n//         } catch (error) {\n//             console.error('Error creating auction:', error);\n//             alert('Error creating auction');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Leader Dashboard</h2>\n//             <button onClick={() => setShowForm(!showForm)}>\n//                 {showForm ? 'Cancel' : 'Create New Auction'}\n//             </button>\n//             <button onClick={() => setShowForm(false)}>View My Auctions</button>\n\n//             {/* Auction creation form */}\n//             {showForm && (\n//                 <form onSubmit={handleCreateAuction} encType=\"multipart/form-data\">\n//                     <h3>Create New Auction</h3>\n//                     <input\n//                         type=\"text\"\n//                         name=\"tournamentName\"\n//                         placeholder=\"Tournament Name\"\n//                         value={newAuction.tournamentName}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"date\"\n//                         name=\"tournamentDate\"\n//                         value={newAuction.tournamentDate}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         name=\"numTeams\"\n//                         placeholder=\"Number of Teams\"\n//                         value={newAuction.numTeams}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         name=\"totalPoints\"\n//                         placeholder=\"Total Points for Teams\"\n//                         value={newAuction.totalPoints}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n\n//                     <h4>Add Players</h4>\n//                     <input\n//                         type=\"text\"\n//                         name=\"name\"\n//                         placeholder=\"Player Name\"\n//                         value={player.name}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         name=\"number\"\n//                         placeholder=\"Player Number\"\n//                         value={player.number}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         name=\"picture\"\n//                         placeholder=\"Player Picture URL\"\n//                         value={player.picture}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input type=\"file\" onChange={handleImageChange} />\n\n//                     <button type=\"button\" onClick={addPlayer}>Add Player</button>\n\n//                     <button type=\"submit\">Create Auction</button>\n//                 </form>\n//             )}\n\n//             <h3>Existing Auctions</h3>\n//             <ul>\n//                 {auctions.map((auction) => (\n//                     <li key={auction._id}>\n//                         {auction.tournamentName} - {auction.tournamentDate}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default LeaderDashboard;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LeaderDashboard() {\n  _s();\n  const [auctionData, setAuctionData] = useState({\n    leaderEmail: '',\n    tournamentName: '',\n    tournamentDate: '',\n    teamsCount: 0,\n    totalPointsPerTeam: 0,\n    players: [{\n      name: '',\n      number: 0,\n      team: '',\n      bidPoints: 0,\n      profilePic: ''\n    }]\n  });\n\n  // Function to handle input change\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAuctionData({\n      ...auctionData,\n      [name]: value\n    });\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('leaderEmail', auctionData.leaderEmail);\n      formData.append('tournamentName', auctionData.tournamentName);\n      formData.append('tournamentDate', auctionData.tournamentDate);\n      formData.append('teamsCount', auctionData.teamsCount);\n      formData.append('totalPointsPerTeam', auctionData.totalPointsPerTeam);\n      formData.append('players', JSON.stringify(auctionData.players));\n\n      // Add image if available\n      if (auctionData.image) {\n        formData.append('image', auctionData.image);\n      }\n      const response = await axios.post('http://localhost:5000/api/auctions/create-auction', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Handle response after success\n      console.log('Auction created successfully', response.data);\n    } catch (error) {\n      console.error('Error creating auction:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create New Auction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"leaderEmail\",\n        value: auctionData.leaderEmail,\n        onChange: handleChange,\n        placeholder: \"Leader Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"tournamentName\",\n        value: auctionData.tournamentName,\n        onChange: handleChange,\n        placeholder: \"Tournament Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"tournamentDate\",\n        value: auctionData.tournamentDate,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"teamsCount\",\n        value: auctionData.teamsCount,\n        onChange: handleChange,\n        placeholder: \"Teams Count\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"totalPointsPerTeam\",\n        value: auctionData.totalPointsPerTeam,\n        onChange: handleChange,\n        placeholder: \"Total Points Per Team\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Player Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: auctionData.players[0].name,\n          onChange: e => setAuctionData({\n            ...auctionData,\n            players: [{\n              ...auctionData.players[0],\n              name: e.target.value\n            }]\n          }),\n          placeholder: \"Player Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"number\",\n          value: auctionData.players[0].number,\n          onChange: e => setAuctionData({\n            ...auctionData,\n            players: [{\n              ...auctionData.players[0],\n              number: e.target.value\n            }]\n          }),\n          placeholder: \"Player Number\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"team\",\n          value: auctionData.players[0].team,\n          onChange: e => setAuctionData({\n            ...auctionData,\n            players: [{\n              ...auctionData.players[0],\n              team: e.target.value\n            }]\n          }),\n          placeholder: \"Player Team\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"bidPoints\",\n          value: auctionData.players[0].bidPoints,\n          onChange: e => setAuctionData({\n            ...auctionData,\n            players: [{\n              ...auctionData.players[0],\n              bidPoints: e.target.value\n            }]\n          }),\n          placeholder: \"Bid Points\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"profilePic\",\n          value: auctionData.players[0].profilePic,\n          onChange: e => setAuctionData({\n            ...auctionData,\n            players: [{\n              ...auctionData.players[0],\n              profilePic: e.target.value\n            }]\n          }),\n          placeholder: \"Profile Picture URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Auction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n}\n_s(LeaderDashboard, \"Ey8ir9MjwoOoi+ZZWs4JKEXqijk=\");\n_c = LeaderDashboard;\nvar _c;\n$RefreshReg$(_c, \"LeaderDashboard\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LeaderDashboard","_s","auctionData","setAuctionData","leaderEmail","tournamentName","tournamentDate","teamsCount","totalPointsPerTeam","players","name","number","team","bidPoints","profilePic","handleChange","e","value","target","handleSubmit","preventDefault","formData","FormData","append","JSON","stringify","image","response","post","headers","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["/home/uki-jaffna/biddingweb/frontend/src/components/LeaderDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios'; // Importing axios\n// import { fetchLeaderAuctions } from '../api';\n\n// const LeaderDashboard = () => {\n//     const [auctions, setAuctions] = useState([]);\n//     const [showForm, setShowForm] = useState(false);\n//     const [newAuction, setNewAuction] = useState({\n//         tournamentName: '',\n//         tournamentDate: '',\n//         numTeams: '',\n//         totalPoints: '',\n//         players: []\n//     });\n//     const [player, setPlayer] = useState({ name: '', number: '', picture: '' });\n//     const [image, setImage] = useState(null);\n\n//     // Fetch existing auctions for this leader on component mount\n//     useEffect(() => {\n//         const getLeaderAuctions = async () => {\n//             const leaderEmail = localStorage.getItem('userEmail'); // Retrieve leader email from local storage\n//             if (!leaderEmail) {\n//                 console.error('Leader email not found in local storage');\n//                 return;\n//             }\n//             try {\n//                 const { data } = await fetchLeaderAuctions(leaderEmail);\n//                 setAuctions(data);\n//             } catch (error) {\n//                 console.error('Error fetching auctions:', error);\n//             }\n//         };\n//         getLeaderAuctions();\n//     }, []);\n\n//     // Handle changes for auction form\n//     const handleAuctionChange = (e) => {\n//         setNewAuction({ ...newAuction, [e.target.name]: e.target.value });\n//     };\n\n//     // Handle changes for adding players to the auction\n//     const handlePlayerChange = (e) => {\n//         setPlayer({ ...player, [e.target.name]: e.target.value });\n//     };\n\n//     // Add a player to the players array\n//     const addPlayer = () => {\n//         if (!player.name || !player.number) {\n//             alert(\"Please fill out all player fields.\");\n//             return;\n//         }\n//         setNewAuction((prev) => ({\n//             ...prev,\n//             players: [...prev.players, player]\n//         }));\n//         setPlayer({ name: '', number: '', picture: '' }); // Reset player form\n//     };\n\n//     const handleImageChange = (e) => {\n//         setImage(e.target.files[0]);\n//     };\n\n//     const handleCreateAuction = async (e) => {\n//         e.preventDefault();\n\n//         // Create FormData to send to the backend\n//         const formData = new FormData();\n//         formData.append('leaderEmail', localStorage.getItem('userEmail')); // Add leader email\n//         formData.append('tournamentName', newAuction.tournamentName);\n//         formData.append('tournamentDate', newAuction.tournamentDate);\n//         formData.append('teamsCount', newAuction.numTeams);\n//         formData.append('totalPointsPerTeam', newAuction.totalPoints);\n//         formData.append('image', image); // Include the image file in the FormData\n//         formData.append('players', JSON.stringify(newAuction.players)); // Include players as a stringified JSON\n\n//         try {\n//             // Send FormData to the backend using axios\n//             const response = await axios.post('http://localhost:5000/api/auctions/create-auction', formData);\n\n//             const result = response.data;\n\n//             if (response.status === 200) {\n//                 setAuctions([...auctions, result]);\n//                 alert('Auction created successfully!');\n//                 setShowForm(false);\n//             } else {\n//                 alert('Failed to create auction');\n//                 console.error('Error:', result);\n//             }\n//         } catch (error) {\n//             console.error('Error creating auction:', error);\n//             alert('Error creating auction');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Leader Dashboard</h2>\n//             <button onClick={() => setShowForm(!showForm)}>\n//                 {showForm ? 'Cancel' : 'Create New Auction'}\n//             </button>\n//             <button onClick={() => setShowForm(false)}>View My Auctions</button>\n\n//             {/* Auction creation form */}\n//             {showForm && (\n//                 <form onSubmit={handleCreateAuction} encType=\"multipart/form-data\">\n//                     <h3>Create New Auction</h3>\n//                     <input\n//                         type=\"text\"\n//                         name=\"tournamentName\"\n//                         placeholder=\"Tournament Name\"\n//                         value={newAuction.tournamentName}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"date\"\n//                         name=\"tournamentDate\"\n//                         value={newAuction.tournamentDate}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         name=\"numTeams\"\n//                         placeholder=\"Number of Teams\"\n//                         value={newAuction.numTeams}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         name=\"totalPoints\"\n//                         placeholder=\"Total Points for Teams\"\n//                         value={newAuction.totalPoints}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n\n//                     <h4>Add Players</h4>\n//                     <input\n//                         type=\"text\"\n//                         name=\"name\"\n//                         placeholder=\"Player Name\"\n//                         value={player.name}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         name=\"number\"\n//                         placeholder=\"Player Number\"\n//                         value={player.number}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         name=\"picture\"\n//                         placeholder=\"Player Picture URL\"\n//                         value={player.picture}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input type=\"file\" onChange={handleImageChange} />\n\n//                     <button type=\"button\" onClick={addPlayer}>Add Player</button>\n\n//                     <button type=\"submit\">Create Auction</button>\n//                 </form>\n//             )}\n\n//             <h3>Existing Auctions</h3>\n//             <ul>\n//                 {auctions.map((auction) => (\n//                     <li key={auction._id}>\n//                         {auction.tournamentName} - {auction.tournamentDate}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default LeaderDashboard;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function LeaderDashboard() {\n  const [auctionData, setAuctionData] = useState({\n    leaderEmail: '',\n    tournamentName: '',\n    tournamentDate: '',\n    teamsCount: 0,\n    totalPointsPerTeam: 0,\n    players: [\n      {\n        name: '',\n        number: 0,\n        team: '',\n        bidPoints: 0,\n        profilePic: '',\n      },\n    ],\n  });\n\n  // Function to handle input change\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setAuctionData({\n      ...auctionData,\n      [name]: value,\n    });\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const formData = new FormData();\n      formData.append('leaderEmail', auctionData.leaderEmail);\n      formData.append('tournamentName', auctionData.tournamentName);\n      formData.append('tournamentDate', auctionData.tournamentDate);\n      formData.append('teamsCount', auctionData.teamsCount);\n      formData.append('totalPointsPerTeam', auctionData.totalPointsPerTeam);\n      formData.append('players', JSON.stringify(auctionData.players));\n\n      // Add image if available\n      if (auctionData.image) {\n        formData.append('image', auctionData.image);\n      }\n\n      const response = await axios.post('http://localhost:5000/api/auctions/create-auction', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      // Handle response after success\n      console.log('Auction created successfully', response.data);\n    } catch (error) {\n      console.error('Error creating auction:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Create New Auction</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          name=\"leaderEmail\"\n          value={auctionData.leaderEmail}\n          onChange={handleChange}\n          placeholder=\"Leader Email\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"tournamentName\"\n          value={auctionData.tournamentName}\n          onChange={handleChange}\n          placeholder=\"Tournament Name\"\n          required\n        />\n        <input\n          type=\"date\"\n          name=\"tournamentDate\"\n          value={auctionData.tournamentDate}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"teamsCount\"\n          value={auctionData.teamsCount}\n          onChange={handleChange}\n          placeholder=\"Teams Count\"\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"totalPointsPerTeam\"\n          value={auctionData.totalPointsPerTeam}\n          onChange={handleChange}\n          placeholder=\"Total Points Per Team\"\n          required\n        />\n        {/* For simplicity, we'll just include one player. You can extend this part */}\n        <div>\n          <h3>Player Info</h3>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={auctionData.players[0].name}\n            onChange={(e) =>\n              setAuctionData({\n                ...auctionData,\n                players: [{ ...auctionData.players[0], name: e.target.value }],\n              })\n            }\n            placeholder=\"Player Name\"\n            required\n          />\n          <input\n            type=\"number\"\n            name=\"number\"\n            value={auctionData.players[0].number}\n            onChange={(e) =>\n              setAuctionData({\n                ...auctionData,\n                players: [{ ...auctionData.players[0], number: e.target.value }],\n              })\n            }\n            placeholder=\"Player Number\"\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"team\"\n            value={auctionData.players[0].team}\n            onChange={(e) =>\n              setAuctionData({\n                ...auctionData,\n                players: [{ ...auctionData.players[0], team: e.target.value }],\n              })\n            }\n            placeholder=\"Player Team\"\n            required\n          />\n          <input\n            type=\"number\"\n            name=\"bidPoints\"\n            value={auctionData.players[0].bidPoints}\n            onChange={(e) =>\n              setAuctionData({\n                ...auctionData,\n                players: [{ ...auctionData.players[0], bidPoints: e.target.value }],\n              })\n            }\n            placeholder=\"Bid Points\"\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"profilePic\"\n            value={auctionData.players[0].profilePic}\n            onChange={(e) =>\n              setAuctionData({\n                ...auctionData,\n                players: [{ ...auctionData.players[0], profilePic: e.target.value }],\n              })\n            }\n            placeholder=\"Profile Picture URL\"\n          />\n        </div>\n\n        <button type=\"submit\">Create Auction</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC;IAC7CQ,WAAW,EAAE,EAAE;IACfC,cAAc,EAAE,EAAE;IAClBC,cAAc,EAAE,EAAE;IAClBC,UAAU,EAAE,CAAC;IACbC,kBAAkB,EAAE,CAAC;IACrBC,OAAO,EAAE,CACP;MACEC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}