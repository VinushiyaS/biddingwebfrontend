{"ast":null,"code":"var _jsxFileName = \"/home/uki-jaffna/biddingweb/frontend/src/components/LeaderDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LeaderDashboard() {\n  _s();\n  const [formData, setFormData] = useState({\n    leaderEmail: '',\n    tournamentName: '',\n    teamsCount: '',\n    bidPointsPerTeam: '',\n    teams: [],\n    players: []\n  });\n  const [submittedData, setSubmittedData] = useState(null); // For displaying submitted data\n  const [error, setError] = useState(null); // To handle errors\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const newValue = name === 'teamsCount' || name === 'bidPointsPerTeam' ? parseInt(value) : value;\n    setFormData(prevData => {\n      if (name === 'teamsCount') {\n        const updatedTeams = Array.from({\n          length: newValue || 0\n        }, (_, index) => {\n          var _prevData$teams$index;\n          return {\n            name: ((_prevData$teams$index = prevData.teams[index]) === null || _prevData$teams$index === void 0 ? void 0 : _prevData$teams$index.name) || '',\n            bidPoints: prevData.bidPointsPerTeam || 0,\n            remainingBidPoints: prevData.bidPointsPerTeam || 0\n          };\n        });\n        return {\n          ...prevData,\n          teamsCount: newValue,\n          teams: updatedTeams\n        };\n      }\n      if (name === 'bidPointsPerTeam') {\n        const updatedTeams = prevData.teams.map(team => ({\n          ...team,\n          bidPoints: newValue || 0,\n          remainingBidPoints: newValue || 0\n        }));\n        return {\n          ...prevData,\n          bidPointsPerTeam: newValue,\n          teams: updatedTeams\n        };\n      }\n      return {\n        ...prevData,\n        [name]: newValue\n      };\n    });\n  };\n  const handleTeamChange = (index, value) => {\n    const updatedTeams = [...formData.teams];\n    updatedTeams[index] = {\n      ...updatedTeams[index],\n      name: value\n    };\n    setFormData({\n      ...formData,\n      teams: updatedTeams\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    try {\n      const response = await axios.post('http://localhost:5000/api/auctions', {\n        leaderEmail: formData.leaderEmail,\n        tournamentName: formData.tournamentName,\n        bidPointsPerTeam: formData.bidPointsPerTeam,\n        teams: formData.teams\n      });\n      setSubmittedData(response.data); // Save the response data to display\n      alert('Tournament successfully created!');\n    } catch (error) {\n      console.error('Error submitting data:', error);\n      setError('Failed to submit data. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leader Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"leaderEmail\",\n        value: formData.leaderEmail,\n        onChange: handleChange,\n        placeholder: \"Leader Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"tournamentName\",\n        value: formData.tournamentName,\n        onChange: handleChange,\n        placeholder: \"Tournament Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"teamsCount\",\n        value: formData.teamsCount,\n        onChange: handleChange,\n        placeholder: \"Number of Teams\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"bidPointsPerTeam\",\n        value: formData.bidPointsPerTeam,\n        onChange: handleChange,\n        placeholder: \"Bid Points Per Team\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Team Names\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), formData.teams.map((team, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: team.name,\n            onChange: e => handleTeamChange(index, e.target.value),\n            placeholder: `Team ${index + 1} Name`,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" - Remaining Points: \", team.remainingBidPoints]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Tournament\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this), submittedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tournament Submitted Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(submittedData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(LeaderDashboard, \"IXk4qmlnqZtsetkkY/IRKR8ZL0A=\");\n_c = LeaderDashboard;\nvar _c;\n$RefreshReg$(_c, \"LeaderDashboard\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LeaderDashboard","_s","formData","setFormData","leaderEmail","tournamentName","teamsCount","bidPointsPerTeam","teams","players","submittedData","setSubmittedData","error","setError","handleChange","e","name","value","target","newValue","parseInt","prevData","updatedTeams","Array","from","length","_","index","_prevData$teams$index","bidPoints","remainingBidPoints","map","team","handleTeamChange","handleSubmit","preventDefault","response","post","data","alert","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","style","color","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/uki-jaffna/biddingweb/frontend/src/components/LeaderDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function LeaderDashboard() {\n  const [formData, setFormData] = useState({\n    leaderEmail: '',\n    tournamentName: '',\n    teamsCount: '',\n    bidPointsPerTeam: '',\n    teams: [],\n    players: [],\n  });\n\n  const [submittedData, setSubmittedData] = useState(null); // For displaying submitted data\n  const [error, setError] = useState(null); // To handle errors\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    const newValue = name === 'teamsCount' || name === 'bidPointsPerTeam' ? parseInt(value) : value;\n\n    setFormData((prevData) => {\n      if (name === 'teamsCount') {\n        const updatedTeams = Array.from({ length: newValue || 0 }, (_, index) => ({\n          name: prevData.teams[index]?.name || '',\n          bidPoints: prevData.bidPointsPerTeam || 0,\n          remainingBidPoints: prevData.bidPointsPerTeam || 0,\n        }));\n        return {\n          ...prevData,\n          teamsCount: newValue,\n          teams: updatedTeams,\n        };\n      }\n\n      if (name === 'bidPointsPerTeam') {\n        const updatedTeams = prevData.teams.map((team) => ({\n          ...team,\n          bidPoints: newValue || 0,\n          remainingBidPoints: newValue || 0,\n        }));\n        return {\n          ...prevData,\n          bidPointsPerTeam: newValue,\n          teams: updatedTeams,\n        };\n      }\n\n      return {\n        ...prevData,\n        [name]: newValue,\n      };\n    });\n  };\n\n  const handleTeamChange = (index, value) => {\n    const updatedTeams = [...formData.teams];\n    updatedTeams[index] = {\n      ...updatedTeams[index],\n      name: value,\n    };\n    setFormData({\n      ...formData,\n      teams: updatedTeams,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(null);\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/auctions', {\n        leaderEmail: formData.leaderEmail,\n        tournamentName: formData.tournamentName,\n        bidPointsPerTeam: formData.bidPointsPerTeam,\n        teams: formData.teams,\n      });\n\n      setSubmittedData(response.data); // Save the response data to display\n      alert('Tournament successfully created!');\n    } catch (error) {\n      console.error('Error submitting data:', error);\n      setError('Failed to submit data. Please try again.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Leader Dashboard</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          name=\"leaderEmail\"\n          value={formData.leaderEmail}\n          onChange={handleChange}\n          placeholder=\"Leader Email\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"tournamentName\"\n          value={formData.tournamentName}\n          onChange={handleChange}\n          placeholder=\"Tournament Name\"\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"teamsCount\"\n          value={formData.teamsCount}\n          onChange={handleChange}\n          placeholder=\"Number of Teams\"\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"bidPointsPerTeam\"\n          value={formData.bidPointsPerTeam}\n          onChange={handleChange}\n          placeholder=\"Bid Points Per Team\"\n          required\n        />\n\n        <div>\n          <h3>Team Names</h3>\n          {formData.teams.map((team, index) => (\n            <div key={index}>\n              <input\n                type=\"text\"\n                value={team.name}\n                onChange={(e) => handleTeamChange(index, e.target.value)}\n                placeholder={`Team ${index + 1} Name`}\n                required\n              />\n              <span> - Remaining Points: {team.remainingBidPoints}</span>\n            </div>\n          ))}\n        </div>\n\n        <button type=\"submit\">Submit Tournament</button>\n      </form>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {submittedData && (\n        <div>\n          <h2>Tournament Submitted Successfully</h2>\n          <pre>{JSON.stringify(submittedData, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}