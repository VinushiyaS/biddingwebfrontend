{"ast":null,"code":"var _jsxFileName = \"/home/uki-jaffna/biddingweb/frontend/src/components/LeaderDashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios'; // Importing axios\n// import { fetchLeaderAuctions } from '../api';\n\n// const LeaderDashboard = () => {\n//     const [auctions, setAuctions] = useState([]);\n//     const [showForm, setShowForm] = useState(false);\n//     const [newAuction, setNewAuction] = useState({\n//         tournamentName: '',\n//         tournamentDate: '',\n//         numTeams: '',\n//         totalPoints: '',\n//         players: []\n//     });\n//     const [player, setPlayer] = useState({ name: '', number: '', picture: '' });\n//     const [image, setImage] = useState(null);\n\n//     // Fetch existing auctions for this leader on component mount\n//     useEffect(() => {\n//         const getLeaderAuctions = async () => {\n//             const leaderEmail = localStorage.getItem('userEmail'); // Retrieve leader email from local storage\n//             if (!leaderEmail) {\n//                 console.error('Leader email not found in local storage');\n//                 return;\n//             }\n//             try {\n//                 const { data } = await fetchLeaderAuctions(leaderEmail);\n//                 setAuctions(data);\n//             } catch (error) {\n//                 console.error('Error fetching auctions:', error);\n//             }\n//         };\n//         getLeaderAuctions();\n//     }, []);\n\n//     // Handle changes for auction form\n//     const handleAuctionChange = (e) => {\n//         setNewAuction({ ...newAuction, [e.target.name]: e.target.value });\n//     };\n\n//     // Handle changes for adding players to the auction\n//     const handlePlayerChange = (e) => {\n//         setPlayer({ ...player, [e.target.name]: e.target.value });\n//     };\n\n//     // Add a player to the players array\n//     const addPlayer = () => {\n//         if (!player.name || !player.number) {\n//             alert(\"Please fill out all player fields.\");\n//             return;\n//         }\n//         setNewAuction((prev) => ({\n//             ...prev,\n//             players: [...prev.players, player]\n//         }));\n//         setPlayer({ name: '', number: '', picture: '' }); // Reset player form\n//     };\n\n//     const handleImageChange = (e) => {\n//         setImage(e.target.files[0]);\n//     };\n\n//     const handleCreateAuction = async (e) => {\n//         e.preventDefault();\n\n//         // Create FormData to send to the backend\n//         const formData = new FormData();\n//         formData.append('leaderEmail', localStorage.getItem('userEmail')); // Add leader email\n//         formData.append('tournamentName', newAuction.tournamentName);\n//         formData.append('tournamentDate', newAuction.tournamentDate);\n//         formData.append('teamsCount', newAuction.numTeams);\n//         formData.append('totalPointsPerTeam', newAuction.totalPoints);\n//         formData.append('image', image); // Include the image file in the FormData\n//         formData.append('players', JSON.stringify(newAuction.players)); // Include players as a stringified JSON\n\n//         try {\n//             // Send FormData to the backend using axios\n//             const response = await axios.post('http://localhost:5000/api/auctions/create-auction', formData);\n\n//             const result = response.data;\n\n//             if (response.status === 200) {\n//                 setAuctions([...auctions, result]);\n//                 alert('Auction created successfully!');\n//                 setShowForm(false);\n//             } else {\n//                 alert('Failed to create auction');\n//                 console.error('Error:', result);\n//             }\n//         } catch (error) {\n//             console.error('Error creating auction:', error);\n//             alert('Error creating auction');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Leader Dashboard</h2>\n//             <button onClick={() => setShowForm(!showForm)}>\n//                 {showForm ? 'Cancel' : 'Create New Auction'}\n//             </button>\n//             <button onClick={() => setShowForm(false)}>View My Auctions</button>\n\n//             {/* Auction creation form */}\n//             {showForm && (\n//                 <form onSubmit={handleCreateAuction} encType=\"multipart/form-data\">\n//                     <h3>Create New Auction</h3>\n//                     <input\n//                         type=\"text\"\n//                         name=\"tournamentName\"\n//                         placeholder=\"Tournament Name\"\n//                         value={newAuction.tournamentName}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"date\"\n//                         name=\"tournamentDate\"\n//                         value={newAuction.tournamentDate}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         name=\"numTeams\"\n//                         placeholder=\"Number of Teams\"\n//                         value={newAuction.numTeams}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         name=\"totalPoints\"\n//                         placeholder=\"Total Points for Teams\"\n//                         value={newAuction.totalPoints}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n\n//                     <h4>Add Players</h4>\n//                     <input\n//                         type=\"text\"\n//                         name=\"name\"\n//                         placeholder=\"Player Name\"\n//                         value={player.name}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         name=\"number\"\n//                         placeholder=\"Player Number\"\n//                         value={player.number}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         name=\"picture\"\n//                         placeholder=\"Player Picture URL\"\n//                         value={player.picture}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input type=\"file\" onChange={handleImageChange} />\n\n//                     <button type=\"button\" onClick={addPlayer}>Add Player</button>\n\n//                     <button type=\"submit\">Create Auction</button>\n//                 </form>\n//             )}\n\n//             <h3>Existing Auctions</h3>\n//             <ul>\n//                 {auctions.map((auction) => (\n//                     <li key={auction._id}>\n//                         {auction.tournamentName} - {auction.tournamentDate}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default LeaderDashboard;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LeaderDashboard() {\n  _s();\n  const [auctionData, setAuctionData] = useState({\n    leaderEmail: '',\n    tournamentName: '',\n    tournamentDate: '',\n    teamsCount: 0,\n    totalPointsPerTeam: 0,\n    players: [{\n      name: '',\n      number: 0,\n      team: '',\n      bidPoints: 0,\n      profilePic: null // Store file input for profile picture\n    }],\n    image: null // For handling the uploaded tournament image\n  });\n\n  // Function to handle input change\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAuctionData({\n      ...auctionData,\n      [name]: value\n    });\n  };\n\n  // Handle file input change for tournament image\n  const handleImageChange = e => {\n    setAuctionData({\n      ...auctionData,\n      image: e.target.files[0] // Store the selected tournament image file\n    });\n  };\n\n  // Handle file input change for player profile picture\n  const handlePlayerImageChange = (e, index) => {\n    const updatedPlayers = [...auctionData.players];\n    updatedPlayers[index].profilePic = e.target.files[0]; // Store the player profile picture\n    setAuctionData({\n      ...auctionData,\n      players: updatedPlayers\n    });\n  };\n\n  // Function to handle player input change\n  const handlePlayerChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedPlayers = [...auctionData.players];\n    updatedPlayers[index] = {\n      ...updatedPlayers[index],\n      [name]: value\n    };\n    setAuctionData({\n      ...auctionData,\n      players: updatedPlayers\n    });\n  };\n\n  // Function to add a new player form\n  const addPlayer = () => {\n    setAuctionData({\n      ...auctionData,\n      players: [...auctionData.players, {\n        name: '',\n        number: 0,\n        team: '',\n        bidPoints: 0,\n        profilePic: null // New player profilePic\n      }]\n    });\n  };\n\n  // Function to remove a player form\n  const removePlayer = index => {\n    const updatedPlayers = auctionData.players.filter((_, i) => i !== index);\n    setAuctionData({\n      ...auctionData,\n      players: updatedPlayers\n    });\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('leaderEmail', auctionData.leaderEmail);\n      formData.append('tournamentName', auctionData.tournamentName);\n      formData.append('tournamentDate', auctionData.tournamentDate);\n      formData.append('teamsCount', auctionData.teamsCount);\n      formData.append('totalPointsPerTeam', auctionData.totalPointsPerTeam);\n\n      // Append players array, including their profile pictures\n      auctionData.players.forEach((player, index) => {\n        formData.append(`players[${index}][name]`, player.name);\n        formData.append(`players[${index}][number]`, player.number);\n        formData.append(`players[${index}][team]`, player.team);\n        formData.append(`players[${index}][bidPoints]`, player.bidPoints);\n\n        // Append the profile picture of each player if available\n        if (player.profilePic) {\n          formData.append(`players[${index}][profilePic]`, player.profilePic);\n        }\n      });\n\n      // Add tournament image if available\n      if (auctionData.image) {\n        formData.append('image', auctionData.image);\n      }\n      const response = await axios.post('http://localhost:5000/api/auctions/create-auction', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Handle response after success\n      console.log('Auction created successfully', response.data);\n    } catch (error) {\n      console.error('Error creating auction:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create New Auction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"leaderEmail\",\n        value: auctionData.leaderEmail,\n        onChange: handleChange,\n        placeholder: \"Leader Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"tournamentName\",\n        value: auctionData.tournamentName,\n        onChange: handleChange,\n        placeholder: \"Tournament Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"tournamentDate\",\n        value: auctionData.tournamentDate,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"teamsCount\",\n        value: auctionData.teamsCount,\n        onChange: handleChange,\n        placeholder: \"Teams Count\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"totalPointsPerTeam\",\n        value: auctionData.totalPointsPerTeam,\n        onChange: handleChange,\n        placeholder: \"Total Points Per Team\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Player Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), auctionData.players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Player \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: player.name,\n            onChange: e => handlePlayerChange(e, index),\n            placeholder: \"Player Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"number\",\n            value: player.number,\n            onChange: e => handlePlayerChange(e, index),\n            placeholder: \"Player Number\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"team\",\n            value: player.team,\n            onChange: e => handlePlayerChange(e, index),\n            placeholder: \"Player Team\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"bidPoints\",\n            value: player.bidPoints,\n            onChange: e => handlePlayerChange(e, index),\n            placeholder: \"Bid Points\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => handlePlayerImageChange(e, index),\n            placeholder: \"Upload Player Profile Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), player.profilePic && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Selected Image: \", player.profilePic.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removePlayer(index),\n            children: \"Remove Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addPlayer,\n          children: \"Add Another Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Auction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n}\n_s(LeaderDashboard, \"Mw0i/U4Uz0mcpdbqznrqrZxs/F0=\");\n_c = LeaderDashboard;\nvar _c;\n$RefreshReg$(_c, \"LeaderDashboard\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LeaderDashboard","_s","auctionData","setAuctionData","leaderEmail","tournamentName","tournamentDate","teamsCount","totalPointsPerTeam","players","name","number","team","bidPoints","profilePic","image","handleChange","e","value","target","handleImageChange","files","handlePlayerImageChange","index","updatedPlayers","handlePlayerChange","addPlayer","removePlayer","filter","_","i","handleSubmit","preventDefault","formData","FormData","append","forEach","player","response","post","headers","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","map","onClick","_c","$RefreshReg$"],"sources":["/home/uki-jaffna/biddingweb/frontend/src/components/LeaderDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios'; // Importing axios\n// import { fetchLeaderAuctions } from '../api';\n\n// const LeaderDashboard = () => {\n//     const [auctions, setAuctions] = useState([]);\n//     const [showForm, setShowForm] = useState(false);\n//     const [newAuction, setNewAuction] = useState({\n//         tournamentName: '',\n//         tournamentDate: '',\n//         numTeams: '',\n//         totalPoints: '',\n//         players: []\n//     });\n//     const [player, setPlayer] = useState({ name: '', number: '', picture: '' });\n//     const [image, setImage] = useState(null);\n\n//     // Fetch existing auctions for this leader on component mount\n//     useEffect(() => {\n//         const getLeaderAuctions = async () => {\n//             const leaderEmail = localStorage.getItem('userEmail'); // Retrieve leader email from local storage\n//             if (!leaderEmail) {\n//                 console.error('Leader email not found in local storage');\n//                 return;\n//             }\n//             try {\n//                 const { data } = await fetchLeaderAuctions(leaderEmail);\n//                 setAuctions(data);\n//             } catch (error) {\n//                 console.error('Error fetching auctions:', error);\n//             }\n//         };\n//         getLeaderAuctions();\n//     }, []);\n\n//     // Handle changes for auction form\n//     const handleAuctionChange = (e) => {\n//         setNewAuction({ ...newAuction, [e.target.name]: e.target.value });\n//     };\n\n//     // Handle changes for adding players to the auction\n//     const handlePlayerChange = (e) => {\n//         setPlayer({ ...player, [e.target.name]: e.target.value });\n//     };\n\n//     // Add a player to the players array\n//     const addPlayer = () => {\n//         if (!player.name || !player.number) {\n//             alert(\"Please fill out all player fields.\");\n//             return;\n//         }\n//         setNewAuction((prev) => ({\n//             ...prev,\n//             players: [...prev.players, player]\n//         }));\n//         setPlayer({ name: '', number: '', picture: '' }); // Reset player form\n//     };\n\n//     const handleImageChange = (e) => {\n//         setImage(e.target.files[0]);\n//     };\n\n//     const handleCreateAuction = async (e) => {\n//         e.preventDefault();\n\n//         // Create FormData to send to the backend\n//         const formData = new FormData();\n//         formData.append('leaderEmail', localStorage.getItem('userEmail')); // Add leader email\n//         formData.append('tournamentName', newAuction.tournamentName);\n//         formData.append('tournamentDate', newAuction.tournamentDate);\n//         formData.append('teamsCount', newAuction.numTeams);\n//         formData.append('totalPointsPerTeam', newAuction.totalPoints);\n//         formData.append('image', image); // Include the image file in the FormData\n//         formData.append('players', JSON.stringify(newAuction.players)); // Include players as a stringified JSON\n\n//         try {\n//             // Send FormData to the backend using axios\n//             const response = await axios.post('http://localhost:5000/api/auctions/create-auction', formData);\n\n//             const result = response.data;\n\n//             if (response.status === 200) {\n//                 setAuctions([...auctions, result]);\n//                 alert('Auction created successfully!');\n//                 setShowForm(false);\n//             } else {\n//                 alert('Failed to create auction');\n//                 console.error('Error:', result);\n//             }\n//         } catch (error) {\n//             console.error('Error creating auction:', error);\n//             alert('Error creating auction');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Leader Dashboard</h2>\n//             <button onClick={() => setShowForm(!showForm)}>\n//                 {showForm ? 'Cancel' : 'Create New Auction'}\n//             </button>\n//             <button onClick={() => setShowForm(false)}>View My Auctions</button>\n\n//             {/* Auction creation form */}\n//             {showForm && (\n//                 <form onSubmit={handleCreateAuction} encType=\"multipart/form-data\">\n//                     <h3>Create New Auction</h3>\n//                     <input\n//                         type=\"text\"\n//                         name=\"tournamentName\"\n//                         placeholder=\"Tournament Name\"\n//                         value={newAuction.tournamentName}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"date\"\n//                         name=\"tournamentDate\"\n//                         value={newAuction.tournamentDate}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         name=\"numTeams\"\n//                         placeholder=\"Number of Teams\"\n//                         value={newAuction.numTeams}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         name=\"totalPoints\"\n//                         placeholder=\"Total Points for Teams\"\n//                         value={newAuction.totalPoints}\n//                         onChange={handleAuctionChange}\n//                         required\n//                     />\n\n//                     <h4>Add Players</h4>\n//                     <input\n//                         type=\"text\"\n//                         name=\"name\"\n//                         placeholder=\"Player Name\"\n//                         value={player.name}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         name=\"number\"\n//                         placeholder=\"Player Number\"\n//                         value={player.number}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         name=\"picture\"\n//                         placeholder=\"Player Picture URL\"\n//                         value={player.picture}\n//                         onChange={handlePlayerChange}\n//                     />\n//                     <input type=\"file\" onChange={handleImageChange} />\n\n//                     <button type=\"button\" onClick={addPlayer}>Add Player</button>\n\n//                     <button type=\"submit\">Create Auction</button>\n//                 </form>\n//             )}\n\n//             <h3>Existing Auctions</h3>\n//             <ul>\n//                 {auctions.map((auction) => (\n//                     <li key={auction._id}>\n//                         {auction.tournamentName} - {auction.tournamentDate}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default LeaderDashboard;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function LeaderDashboard() {\n  const [auctionData, setAuctionData] = useState({\n    leaderEmail: '',\n    tournamentName: '',\n    tournamentDate: '',\n    teamsCount: 0,\n    totalPointsPerTeam: 0,\n    players: [\n      {\n        name: '',\n        number: 0,\n        team: '',\n        bidPoints: 0,\n        profilePic: null, // Store file input for profile picture\n      },\n    ],\n    image: null, // For handling the uploaded tournament image\n  });\n\n  // Function to handle input change\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setAuctionData({\n      ...auctionData,\n      [name]: value,\n    });\n  };\n\n  // Handle file input change for tournament image\n  const handleImageChange = (e) => {\n    setAuctionData({\n      ...auctionData,\n      image: e.target.files[0], // Store the selected tournament image file\n    });\n  };\n\n  // Handle file input change for player profile picture\n  const handlePlayerImageChange = (e, index) => {\n    const updatedPlayers = [...auctionData.players];\n    updatedPlayers[index].profilePic = e.target.files[0]; // Store the player profile picture\n    setAuctionData({\n      ...auctionData,\n      players: updatedPlayers,\n    });\n  };\n\n  // Function to handle player input change\n  const handlePlayerChange = (e, index) => {\n    const { name, value } = e.target;\n    const updatedPlayers = [...auctionData.players];\n    updatedPlayers[index] = { ...updatedPlayers[index], [name]: value };\n    setAuctionData({\n      ...auctionData,\n      players: updatedPlayers,\n    });\n  };\n\n  // Function to add a new player form\n  const addPlayer = () => {\n    setAuctionData({\n      ...auctionData,\n      players: [\n        ...auctionData.players,\n        {\n          name: '',\n          number: 0,\n          team: '',\n          bidPoints: 0,\n          profilePic: null, // New player profilePic\n        },\n      ],\n    });\n  };\n\n  // Function to remove a player form\n  const removePlayer = (index) => {\n    const updatedPlayers = auctionData.players.filter((_, i) => i !== index);\n    setAuctionData({\n      ...auctionData,\n      players: updatedPlayers,\n    });\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const formData = new FormData();\n      formData.append('leaderEmail', auctionData.leaderEmail);\n      formData.append('tournamentName', auctionData.tournamentName);\n      formData.append('tournamentDate', auctionData.tournamentDate);\n      formData.append('teamsCount', auctionData.teamsCount);\n      formData.append('totalPointsPerTeam', auctionData.totalPointsPerTeam);\n\n      // Append players array, including their profile pictures\n      auctionData.players.forEach((player, index) => {\n        formData.append(`players[${index}][name]`, player.name);\n        formData.append(`players[${index}][number]`, player.number);\n        formData.append(`players[${index}][team]`, player.team);\n        formData.append(`players[${index}][bidPoints]`, player.bidPoints);\n\n        // Append the profile picture of each player if available\n        if (player.profilePic) {\n          formData.append(`players[${index}][profilePic]`, player.profilePic);\n        }\n      });\n\n      // Add tournament image if available\n      if (auctionData.image) {\n        formData.append('image', auctionData.image);\n      }\n\n      const response = await axios.post('http://localhost:5000/api/auctions/create-auction', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      // Handle response after success\n      console.log('Auction created successfully', response.data);\n    } catch (error) {\n      console.error('Error creating auction:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Create New Auction</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          name=\"leaderEmail\"\n          value={auctionData.leaderEmail}\n          onChange={handleChange}\n          placeholder=\"Leader Email\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"tournamentName\"\n          value={auctionData.tournamentName}\n          onChange={handleChange}\n          placeholder=\"Tournament Name\"\n          required\n        />\n        <input\n          type=\"date\"\n          name=\"tournamentDate\"\n          value={auctionData.tournamentDate}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"teamsCount\"\n          value={auctionData.teamsCount}\n          onChange={handleChange}\n          placeholder=\"Teams Count\"\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"totalPointsPerTeam\"\n          value={auctionData.totalPointsPerTeam}\n          onChange={handleChange}\n          placeholder=\"Total Points Per Team\"\n          required\n        />\n\n        {/* Render Player Info dynamically */}\n        <div>\n          <h3>Player Info</h3>\n          {auctionData.players.map((player, index) => (\n            <div key={index}>\n              <h4>Player {index + 1}</h4>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={player.name}\n                onChange={(e) => handlePlayerChange(e, index)}\n                placeholder=\"Player Name\"\n                required\n              />\n              <input\n                type=\"number\"\n                name=\"number\"\n                value={player.number}\n                onChange={(e) => handlePlayerChange(e, index)}\n                placeholder=\"Player Number\"\n                required\n              />\n              <input\n                type=\"text\"\n                name=\"team\"\n                value={player.team}\n                onChange={(e) => handlePlayerChange(e, index)}\n                placeholder=\"Player Team\"\n                required\n              />\n              <input\n                type=\"number\"\n                name=\"bidPoints\"\n                value={player.bidPoints}\n                onChange={(e) => handlePlayerChange(e, index)}\n                placeholder=\"Bid Points\"\n                required\n              />\n              {/* Profile Picture Input */}\n              <input\n                type=\"file\"\n                onChange={(e) => handlePlayerImageChange(e, index)}\n                placeholder=\"Upload Player Profile Picture\"\n              />\n              {player.profilePic && (\n                <p>Selected Image: {player.profilePic.name}</p>\n              )}\n              <button type=\"button\" onClick={() => removePlayer(index)}>Remove Player</button>\n            </div>\n          ))}\n          <button type=\"button\" onClick={addPlayer}>Add Another Player</button>\n        </div>\n\n        {/* Image Upload for Tournament */}\n        <input\n          type=\"file\"\n          onChange={handleImageChange}\n        />\n        <button type=\"submit\">Create Auction</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC;IAC7CQ,WAAW,EAAE,EAAE;IACfC,cAAc,EAAE,EAAE;IAClBC,cAAc,EAAE,EAAE;IAClBC,UAAU,EAAE,CAAC;IACbC,kBAAkB,EAAE,CAAC;IACrBC,OAAO,EAAE,CACP;MACEC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}