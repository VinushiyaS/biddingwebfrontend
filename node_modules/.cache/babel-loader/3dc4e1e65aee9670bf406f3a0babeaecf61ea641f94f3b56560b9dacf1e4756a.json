{"ast":null,"code":"var _jsxFileName = \"/home/uki-jaffna/biddingweb/frontend/src/components/PaymentPage.js\",\n  _s = $RefreshSig$();\n// src/components/PaymentPage.js\nimport React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from 'axios';\n\n// Load your Stripe public key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_test_51QBtqRDVaxzZr2tTLGJoEtp6DLvscZPUmcUnE1ygGSieZQ3Dfn36HLZYY8uVmIAYJcvgewGetG8PxXpwpecNnyV200M4Kn2Jku');\n\n// CheckoutForm component for the payment form\nconst CheckoutForm = () => {\n  _s();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [succeeded, setSucceeded] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsProcessing(true);\n    setError(null);\n\n    // Fetch client secret from the backend\n    const {\n      data\n    } = await axios.post('http://localhost:5000/api/payment/create-payment-intent');\n    const {\n      clientSecret\n    } = data;\n    const {\n      error,\n      paymentIntent\n    } = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n    if (error) {\n      setError(error.message);\n    } else {\n      if (paymentIntent.status === 'succeeded') {\n        setSucceeded(true);\n      }\n    }\n    setIsProcessing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !stripe || isProcessing || succeeded,\n        children: isProcessing ? 'Processing…' : 'Pay ₹2750'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this), succeeded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Payment successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n// PaymentPage Component to wrap the CheckoutForm with Elements\n_s(CheckoutForm, \"n09cN3HbiSr6v+IUpf77r+JvAYw=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nconst PaymentPage = () => /*#__PURE__*/_jsxDEV(Elements, {\n  stripe: stripePromise,\n  children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 5\n}, this);\n_c2 = PaymentPage;\nexport default PaymentPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"PaymentPage\");","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useStripe","useElements","axios","jsxDEV","_jsxDEV","stripePromise","CheckoutForm","_s","isProcessing","setIsProcessing","error","setError","succeeded","setSucceeded","stripe","elements","handleSubmit","event","preventDefault","data","post","clientSecret","paymentIntent","confirmCardPayment","payment_method","card","getElement","message","status","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","disabled","_c","PaymentPage","_c2","$RefreshReg$"],"sources":["/home/uki-jaffna/biddingweb/frontend/src/components/PaymentPage.js"],"sourcesContent":["// src/components/PaymentPage.js\nimport React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from 'axios';\n\n// Load your Stripe public key\nconst stripePromise = loadStripe('pk_test_51QBtqRDVaxzZr2tTLGJoEtp6DLvscZPUmcUnE1ygGSieZQ3Dfn36HLZYY8uVmIAYJcvgewGetG8PxXpwpecNnyV200M4Kn2Jku');\n\n// CheckoutForm component for the payment form\nconst CheckoutForm = () => {\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [error, setError] = useState(null);\n    const [succeeded, setSucceeded] = useState(false);\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setIsProcessing(true);\n        setError(null);\n\n         // Fetch client secret from the backend\n         const { data } = await axios.post('http://localhost:5000/api/payment/create-payment-intent');\n         const { clientSecret } = data;\n \n         const { error, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\n             payment_method: {\n                 card: elements.getElement(CardElement),\n             },\n         });\n \n         if (error) {\n             setError(error.message);\n         } else {\n             if (paymentIntent.status === 'succeeded') {\n                 setSucceeded(true);\n             }\n         }\n         setIsProcessing(false);\n     };\n\n    return (\n        <div>\n            <h2>Payment Page</h2>\n            <form onSubmit={handleSubmit}>\n                <CardElement />\n                <button type=\"submit\" disabled={!stripe || isProcessing || succeeded}>\n                    {isProcessing ? 'Processing…' : 'Pay ₹2750'}\n                </button>\n            </form>\n            {error && <div>{error}</div>}\n            {succeeded && <div>Payment successful!</div>}\n        </div>\n    );\n};\n\n// PaymentPage Component to wrap the CheckoutForm with Elements\nconst PaymentPage = () => (\n    <Elements stripe={stripePromise}>\n        <CheckoutForm />\n    </Elements>\n);\n\nexport default PaymentPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}