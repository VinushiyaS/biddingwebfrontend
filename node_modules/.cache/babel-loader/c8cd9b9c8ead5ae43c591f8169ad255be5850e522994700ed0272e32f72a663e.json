{"ast":null,"code":"var _jsxFileName = \"/home/uki-jaffna/biddingweb/frontend/src/components/Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { registerUser } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = ({\n  onClose\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const isValidEmail = email => {\n    const emailRegex = /^[a-zA-Z0-9._%+-]+(gmail\\.com|.+\\.life|.+\\.lk)$/;\n    return emailRegex.test(email);\n  };\n  const isValidPassword = password => {\n    const passwordRegex = /^[A-Z][a-zA-Z0-9!@#$%^&*]{6}[A-Z]$/;\n    const symbolCount = (password.match(/[!@#$%^&*]/g) || []).length;\n    return passwordRegex.test(password) && symbolCount >= 2;\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    const {\n      email,\n      password,\n      confirmPassword\n    } = formData;\n    if (!isValidEmail(email)) {\n      setError('Invalid email. Please use @gmail.com, .life, or .lk domains.');\n      return;\n    }\n    if (!isValidPassword(password)) {\n      setError('Password must be exactly 8 characters, start and end with uppercase letters, and include at least 2 symbols.');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return;\n    }\n    try {\n      await registerUser({\n        email,\n        password,\n        role: 'viewer'\n      });\n      navigate('/viewer-dashboard');\n      onClose();\n    } catch (error) {\n      console.error('Registration failed', error);\n      setError('Registration failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        className: \"form-control\",\n        placeholder: \"Enter your email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        className: \"form-control\",\n        placeholder: \"Enter your password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirmPassword\",\n        name: \"confirmPassword\",\n        className: \"form-control\",\n        placeholder: \"Confirm your password\",\n        value: formData.confirmPassword,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn\",\n      style: {\n        backgroundColor: '#040c0e',\n        color: 'white',\n        width: '100%'\n      },\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Signup, \"vLqJmbqvbw2FemcYiCO4QqUL4Ms=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","Link","registerUser","jsxDEV","_jsxDEV","Signup","onClose","_s","formData","setFormData","email","password","confirmPassword","error","setError","navigate","isValidEmail","emailRegex","test","isValidPassword","passwordRegex","symbolCount","match","length","handleChange","e","target","name","value","handleSubmit","preventDefault","role","console","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","onChange","required","style","backgroundColor","color","width","_c","$RefreshReg$"],"sources":["/home/uki-jaffna/biddingweb/frontend/src/components/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { registerUser } from '../api';\n\nconst Signup = ({ onClose }) => {\n    const [formData, setFormData] = useState({ email: '', password: '', confirmPassword: '' });\n    const [error, setError] = useState('');\n    const navigate = useNavigate();\n\n    \n    const isValidEmail = (email) => {\n        const emailRegex = /^[a-zA-Z0-9._%+-]+(gmail\\.com|.+\\.life|.+\\.lk)$/;\n        return emailRegex.test(email);\n    };\n\n    const isValidPassword = (password) => {\n        const passwordRegex = /^[A-Z][a-zA-Z0-9!@#$%^&*]{6}[A-Z]$/;\n        const symbolCount = (password.match(/[!@#$%^&*]/g) || []).length;\n        return passwordRegex.test(password) && symbolCount >= 2;\n    };\n\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError('');\n\n        const { email, password, confirmPassword } = formData;\n\n        if (!isValidEmail(email)) {\n            setError('Invalid email. Please use @gmail.com, .life, or .lk domains.');\n            return;\n        }\n\n        if (!isValidPassword(password)) {\n            setError('Password must be exactly 8 characters, start and end with uppercase letters, and include at least 2 symbols.');\n            return;\n        }\n\n        if (password !== confirmPassword) {\n            setError('Passwords do not match.');\n            return;\n        }\n\n        try {\n            await registerUser({ email, password, role: 'viewer' });\n            navigate('/viewer-dashboard');\n            onClose(); \n        } catch (error) {\n            console.error('Registration failed', error);\n            setError('Registration failed. Please try again.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group mb-3\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Enter your email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    required\n                />\n            </div>\n            <div className=\"form-group mb-3\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Enter your password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                    required\n                />\n            </div>\n            <div className=\"form-group mb-4\">\n                <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                <input\n                    type=\"password\"\n                    id=\"confirmPassword\"\n                    name=\"confirmPassword\"\n                    className=\"form-control\"\n                    placeholder=\"Confirm your password\"\n                    value={formData.confirmPassword}\n                    onChange={handleChange}\n                    required\n                />\n            </div>\n            {error && <div className=\"alert alert-danger\">{error}</div>}\n            <button\n                type=\"submit\"\n                className=\"btn\"\n                style={{\n                    backgroundColor: '#040c0e',\n                    color: 'white',\n                    width: '100%'\n                }}\n            >\n                Sign Up\n            </button>\n        </form>\n    );\n};\n\nexport default Signup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,SAASC,YAAY,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IAAEW,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,eAAe,EAAE;EAAG,CAAC,CAAC;EAC1F,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAG9B,MAAMgB,YAAY,GAAIN,KAAK,IAAK;IAC5B,MAAMO,UAAU,GAAG,iDAAiD;IACpE,OAAOA,UAAU,CAACC,IAAI,CAACR,KAAK,CAAC;EACjC,CAAC;EAED,MAAMS,eAAe,GAAIR,QAAQ,IAAK;IAClC,MAAMS,aAAa,GAAG,oCAAoC;IAC1D,MAAMC,WAAW,GAAG,CAACV,QAAQ,CAACW,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,EAAEC,MAAM;IAChE,OAAOH,aAAa,CAACF,IAAI,CAACP,QAAQ,CAAC,IAAIU,WAAW,IAAI,CAAC;EAC3D,CAAC;EAED,MAAMG,YAAY,GAAIC,CAAC,IAAK;IACxBhB,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACiB,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EACjE,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBhB,QAAQ,CAAC,EAAE,CAAC;IAEZ,MAAM;MAAEJ,KAAK;MAAEC,QAAQ;MAAEC;IAAgB,CAAC,GAAGJ,QAAQ;IAErD,IAAI,CAACQ,YAAY,CAACN,KAAK,CAAC,EAAE;MACtBI,QAAQ,CAAC,8DAA8D,CAAC;MACxE;IACJ;IAEA,IAAI,CAACK,eAAe,CAACR,QAAQ,CAAC,EAAE;MAC5BG,QAAQ,CAAC,8GAA8G,CAAC;MACxH;IACJ;IAEA,IAAIH,QAAQ,KAAKC,eAAe,EAAE;MAC9BE,QAAQ,CAAC,yBAAyB,CAAC;MACnC;IACJ;IAEA,IAAI;MACA,MAAMZ,YAAY,CAAC;QAAEQ,KAAK;QAAEC,QAAQ;QAAEoB,IAAI,EAAE;MAAS,CAAC,CAAC;MACvDhB,QAAQ,CAAC,mBAAmB,CAAC;MAC7BT,OAAO,CAAC,CAAC;IACb,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZmB,OAAO,CAACnB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CC,QAAQ,CAAC,wCAAwC,CAAC;IACtD;EACJ,CAAC;EAED,oBACIV,OAAA;IAAM6B,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,gBACzB9B,OAAA;MAAK+B,SAAS,EAAC,iBAAiB;MAAAD,QAAA,gBAC5B9B,OAAA;QAAOgC,OAAO,EAAC,OAAO;QAAAF,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpCpC,OAAA;QACIqC,IAAI,EAAC,OAAO;QACZC,EAAE,EAAC,OAAO;QACVf,IAAI,EAAC,OAAO;QACZQ,SAAS,EAAC,cAAc;QACxBQ,WAAW,EAAC,kBAAkB;QAC9Bf,KAAK,EAAEpB,QAAQ,CAACE,KAAM;QACtBkC,QAAQ,EAAEpB,YAAa;QACvBqB,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNpC,OAAA;MAAK+B,SAAS,EAAC,iBAAiB;MAAAD,QAAA,gBAC5B9B,OAAA;QAAOgC,OAAO,EAAC,UAAU;QAAAF,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1CpC,OAAA;QACIqC,IAAI,EAAC,UAAU;QACfC,EAAE,EAAC,UAAU;QACbf,IAAI,EAAC,UAAU;QACfQ,SAAS,EAAC,cAAc;QACxBQ,WAAW,EAAC,qBAAqB;QACjCf,KAAK,EAAEpB,QAAQ,CAACG,QAAS;QACzBiC,QAAQ,EAAEpB,YAAa;QACvBqB,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNpC,OAAA;MAAK+B,SAAS,EAAC,iBAAiB;MAAAD,QAAA,gBAC5B9B,OAAA;QAAOgC,OAAO,EAAC,iBAAiB;QAAAF,QAAA,EAAC;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzDpC,OAAA;QACIqC,IAAI,EAAC,UAAU;QACfC,EAAE,EAAC,iBAAiB;QACpBf,IAAI,EAAC,iBAAiB;QACtBQ,SAAS,EAAC,cAAc;QACxBQ,WAAW,EAAC,uBAAuB;QACnCf,KAAK,EAAEpB,QAAQ,CAACI,eAAgB;QAChCgC,QAAQ,EAAEpB,YAAa;QACvBqB,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EACL3B,KAAK,iBAAIT,OAAA;MAAK+B,SAAS,EAAC,oBAAoB;MAAAD,QAAA,EAAErB;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3DpC,OAAA;MACIqC,IAAI,EAAC,QAAQ;MACbN,SAAS,EAAC,KAAK;MACfW,KAAK,EAAE;QACHC,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,OAAO;QACdC,KAAK,EAAE;MACX,CAAE;MAAAf,QAAA,EACL;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEf,CAAC;AAACjC,EAAA,CA3GIF,MAAM;EAAA,QAGSL,WAAW;AAAA;AAAAkD,EAAA,GAH1B7C,MAAM;AA6GZ,eAAeA,MAAM;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}