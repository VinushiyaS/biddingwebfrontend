{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// export default function ViewerDashboard() {\n//   const [auctions, setAuctions] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     if (!sessionStorage.getItem('hasVisited')) {\n//       sessionStorage.setItem('hasVisited', 'true');\n//       window.location.reload();\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     // API call to fetch auctions with the correct endpoint\n//     axios.get('http://localhost:5000/api/auctions')\n//       .then(response => {\n//         setAuctions(response.data); // Save auctions data to state\n//         setLoading(false);           // Set loading to false once data is fetched\n//       })\n//       .catch(err => {\n//         setError('Failed to fetch auctions'); // Error handling\n//         setLoading(false);\n//         console.error(\"Error fetching auctions:\", err);  // Log the error for debugging\n//       });\n//   }, []);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>Viewer Dashboard</h1>\n//       {auctions.length > 0 ? (\n//         <div>\n//           {auctions.map((auction) => (\n//             <div key={auction._id} className=\"auction-card\">\n//               <h2>{auction.tournamentName || 'No Tournament Name'}</h2>\n//               <p>Leader Email: {auction.leaderEmail || 'No Leader Email'}</p>\n//               <p>Total Points per Team: {auction.bidPointsPerTeam || 'No Points Data'}</p>\n\n//               {/* Teams Section */}\n//               <h3>Teams</h3>\n//               {auction.teams && auction.teams.length > 0 ? (\n//                 <ul>\n//                   {auction.teams.map((team) => (\n//                     <li key={team._id}>\n//                       <p>Team Name: {team.name || 'No Team Name'}</p>\n//                       <p>Bid Points: {team.bidPoints || 'No Bid Points'}</p>\n//                       <p>Remaining Points: {team.remainingBidPoints || 'No Remaining Points'}</p>\n//                     </li>\n//                   ))}\n//                 </ul>\n//               ) : (\n//                 <p>No teams available for this auction.</p>\n//               )}\n\n//               {/* Players Section */}\n//               <h3>Players</h3>\n//               {auction.players && auction.players.length > 0 ? (\n//                 <ul>\n//                   {auction.players.map((playerId) => (\n//                     <li key={playerId}>\n//                       <p>Player ID: {playerId || 'No Player Data'}</p>\n//                       {/* If you need to display player details, make another request to fetch player data using playerId */}\n//                     </li>\n//                   ))}\n//                 </ul>\n//               ) : (\n//                 <p>No players added to this auction yet.</p>\n//               )}\n\n//               {/* Image Section */}\n//               {auction.image && (\n//                 <div>\n//                   <h3>Auction Image</h3>\n//                   <img src={auction.image} alt=\"Auction\" width=\"200\" />\n//                 </div>\n//               )}\n//             </div>\n//           ))}\n//         </div>\n//       ) : (\n//         <p>No auctions found.</p>\n//       )}\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/home/uki-jaffna/biddingweb/frontend/src/components/ViewerDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// export default function ViewerDashboard() {\n//   const [auctions, setAuctions] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     if (!sessionStorage.getItem('hasVisited')) {\n//       sessionStorage.setItem('hasVisited', 'true');\n//       window.location.reload();\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     // API call to fetch auctions with the correct endpoint\n//     axios.get('http://localhost:5000/api/auctions')\n//       .then(response => {\n//         setAuctions(response.data); // Save auctions data to state\n//         setLoading(false);           // Set loading to false once data is fetched\n//       })\n//       .catch(err => {\n//         setError('Failed to fetch auctions'); // Error handling\n//         setLoading(false);\n//         console.error(\"Error fetching auctions:\", err);  // Log the error for debugging\n//       });\n//   }, []);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>Viewer Dashboard</h1>\n//       {auctions.length > 0 ? (\n//         <div>\n//           {auctions.map((auction) => (\n//             <div key={auction._id} className=\"auction-card\">\n//               <h2>{auction.tournamentName || 'No Tournament Name'}</h2>\n//               <p>Leader Email: {auction.leaderEmail || 'No Leader Email'}</p>\n//               <p>Total Points per Team: {auction.bidPointsPerTeam || 'No Points Data'}</p>\n\n//               {/* Teams Section */}\n//               <h3>Teams</h3>\n//               {auction.teams && auction.teams.length > 0 ? (\n//                 <ul>\n//                   {auction.teams.map((team) => (\n//                     <li key={team._id}>\n//                       <p>Team Name: {team.name || 'No Team Name'}</p>\n//                       <p>Bid Points: {team.bidPoints || 'No Bid Points'}</p>\n//                       <p>Remaining Points: {team.remainingBidPoints || 'No Remaining Points'}</p>\n//                     </li>\n//                   ))}\n//                 </ul>\n//               ) : (\n//                 <p>No teams available for this auction.</p>\n//               )}\n\n//               {/* Players Section */}\n//               <h3>Players</h3>\n//               {auction.players && auction.players.length > 0 ? (\n//                 <ul>\n//                   {auction.players.map((playerId) => (\n//                     <li key={playerId}>\n//                       <p>Player ID: {playerId || 'No Player Data'}</p>\n//                       {/* If you need to display player details, make another request to fetch player data using playerId */}\n//                     </li>\n//                   ))}\n//                 </ul>\n//               ) : (\n//                 <p>No players added to this auction yet.</p>\n//               )}\n\n//               {/* Image Section */}\n//               {auction.image && (\n//                 <div>\n//                   <h3>Auction Image</h3>\n//                   <img src={auction.image} alt=\"Auction\" width=\"200\" />\n//                 </div>\n//               )}\n//             </div>\n//           ))}\n//         </div>\n//       ) : (\n//         <p>No auctions found.</p>\n//       )}\n//     </div>\n//   );\n// }\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}