{"ast":null,"code":"var _jsxFileName = \"/home/uki-jaffna/biddingweb/frontend/src/components/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [leaders, setLeaders] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [totalUsers, setTotalUsers] = useState(0);\n  const [totalLeaders, setTotalLeaders] = useState(0);\n\n  // Fetch all data when the component mounts\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch leaders, users, and stats\n        const leadersResponse = await fetch('http://localhost:5000/api/admin/leaders');\n        const leadersData = await leadersResponse.json();\n        const usersResponse = await fetch('http://localhost:5000/api/admin/users');\n        const usersData = await usersResponse.json();\n        const statsResponse = await fetch('http://localhost:5000/api/admin/stats');\n        const statsData = await statsResponse.json();\n\n        // Fetch paid users\n        const paidUsersResponse = await fetch('http://localhost:5000/api/admin/paid-users');\n        const paidUsersData = await paidUsersResponse.json();\n        setLeaders(leadersData);\n        setUsers(usersData);\n        setTotalUsers(statsData.totalUsers);\n        setTotalLeaders(statsData.totalLeaders);\n        setPaidUsers(paidUsersData); // Set the paid users data\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Users: \", totalUsers]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Leaders: \", totalLeaders]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Users Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [...users, ...leaders].map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Paid Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Payment Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: paidUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.userId.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.userId.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(user.paymentDate).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"TcQzRV7H0DW6EQ8sMasCB7HYb4A=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdminDashboard","_s","leaders","setLeaders","users","setUsers","totalUsers","setTotalUsers","totalLeaders","setTotalLeaders","fetchData","leadersResponse","fetch","leadersData","json","usersResponse","usersData","statsResponse","statsData","paidUsersResponse","paidUsersData","setPaidUsers","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","email","role","_id","paidUsers","userId","name","amount","Date","paymentDate","toLocaleDateString","_c","$RefreshReg$"],"sources":["/home/uki-jaffna/biddingweb/frontend/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst AdminDashboard = () => {\n    const [leaders, setLeaders] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [totalUsers, setTotalUsers] = useState(0);\n    const [totalLeaders, setTotalLeaders] = useState(0);\n\n    // Fetch all data when the component mounts\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // Fetch leaders, users, and stats\n                const leadersResponse = await fetch('http://localhost:5000/api/admin/leaders');\n                const leadersData = await leadersResponse.json();\n\n                const usersResponse = await fetch('http://localhost:5000/api/admin/users');\n                const usersData = await usersResponse.json();\n\n                const statsResponse = await fetch('http://localhost:5000/api/admin/stats');\n                const statsData = await statsResponse.json();\n\n                // Fetch paid users\n                const paidUsersResponse = await fetch('http://localhost:5000/api/admin/paid-users');\n                const paidUsersData = await paidUsersResponse.json();\n\n                setLeaders(leadersData);\n                setUsers(usersData);\n                setTotalUsers(statsData.totalUsers);\n                setTotalLeaders(statsData.totalLeaders);\n                setPaidUsers(paidUsersData); // Set the paid users data\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n            }\n        };\n        fetchData();\n    }, []);\n\n    return (\n        <div className=\"dashboard\">\n            <h2>Admin Dashboard</h2>\n            <div className=\"stats\">\n                <p>Total Users: {totalUsers}</p>\n                <p>Total Leaders: {totalLeaders}</p>\n            </div>\n\n            <h3>Users Details</h3>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Email</th>\n                        <th>Role</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {[...users, ...leaders].map(user => (\n                        <tr key={user._id}>\n                            <td>{user.email}</td>\n                            <td>{user.role}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            <h3>Paid Users</h3>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Amount</th>\n                        <th>Payment Date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {paidUsers.map(user => (\n                        <tr key={user._id}>\n                            <td>{user.userId.name}</td>\n                            <td>{user.userId.email}</td>\n                            <td>{user.amount}</td>\n                            <td>{new Date(user.paymentDate).toLocaleDateString()}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}