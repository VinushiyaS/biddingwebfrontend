{"ast":null,"code":"var _jsxFileName = \"/home/uki-jaffna/biddingweb/frontend/src/components/LeaderDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LeaderDashboard() {\n  _s();\n  const [formData, setFormData] = useState({\n    leaderEmail: '',\n    tournamentName: '',\n    teamsCount: 0,\n    bidPointsPerTeam: 0,\n    teams: [],\n    players: []\n  });\n  const [submittedData, setSubmittedData] = useState(null); // To hold the submitted data\n\n  // This function calculates the remaining bid points for each team\n  const calculateRemainingPoints = () => {\n    const updatedTeams = formData.teams.map(team => {\n      // Calculate the total points spent by the team\n      const totalBidAmount = formData.players.filter(player => player.team === team.name).reduce((sum, player) => sum + player.bidAmount, 0);\n\n      // Calculate remaining points\n      const remainingPoints = team.bidPoints - totalBidAmount;\n      return {\n        ...team,\n        remainingBidPoints: remainingPoints\n      };\n    });\n\n    // Update the teams with the new remaining points\n    setFormData({\n      ...formData,\n      teams: updatedTeams\n    });\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const newValue = name === 'teamsCount' || name === 'bidPointsPerTeam' ? parseInt(value) : value;\n    setFormData(prevData => {\n      if (name === 'teamsCount') {\n        const updatedTeams = Array.from({\n          length: newValue || 0\n        }, (_, index) => {\n          var _prevData$teams$index;\n          return {\n            name: ((_prevData$teams$index = prevData.teams[index]) === null || _prevData$teams$index === void 0 ? void 0 : _prevData$teams$index.name) || '',\n            bidPoints: prevData.bidPointsPerTeam || 0,\n            remainingBidPoints: prevData.bidPointsPerTeam || 0\n          };\n        });\n        return {\n          ...prevData,\n          teamsCount: newValue,\n          teams: updatedTeams\n        };\n      }\n      if (name === 'bidPointsPerTeam') {\n        const updatedTeams = prevData.teams.map(team => ({\n          ...team,\n          bidPoints: newValue || 0,\n          remainingBidPoints: newValue || 0\n        }));\n        return {\n          ...prevData,\n          bidPointsPerTeam: newValue,\n          teams: updatedTeams\n        };\n      }\n      return {\n        ...prevData,\n        [name]: newValue\n      };\n    });\n  };\n  const handleTeamChange = (index, value) => {\n    const updatedTeams = [...formData.teams];\n    updatedTeams[index] = {\n      ...updatedTeams[index],\n      name: value\n    };\n    setFormData({\n      ...formData,\n      teams: updatedTeams\n    });\n  };\n  const handlePlayerChange = (index, field, value) => {\n    const updatedPlayers = [...formData.players];\n    updatedPlayers[index] = {\n      ...updatedPlayers[index],\n      [field]: value\n    };\n    setFormData({\n      ...formData,\n      players: updatedPlayers\n    }, calculateRemainingPoints); // Call to update remaining points\n  };\n  const addPlayer = () => {\n    setFormData({\n      ...formData,\n      players: [...formData.players, {\n        name: '',\n        photo: null,\n        bidAmount: 0,\n        team: '',\n        done: false\n      }]\n    });\n  };\n  const handleDone = index => {\n    const updatedPlayers = [...formData.players];\n    updatedPlayers[index].done = true;\n    setFormData({\n      ...formData,\n      players: updatedPlayers\n    }, calculateRemainingPoints); // Call to update remaining points\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Send the form data to the backend API to create the auction\n      const response = await axios.post('http://localhost:5000/api/auctions/create', formData);\n\n      // Assuming the backend returns the 'auction' object in the response\n      const {\n        auction\n      } = response.data;\n\n      // Update the frontend with the auction data\n      setSubmittedData(auction);\n\n      // Reset the form data after submission (optional)\n      setFormData({\n        leaderEmail: '',\n        tournamentName: '',\n        teamsCount: 0,\n        bidPointsPerTeam: 0,\n        teams: [],\n        players: []\n      });\n    } catch (error) {\n      console.error('Error submitting tournament:', error);\n      alert('There was an error submitting the tournament.');\n    }\n  };\n  useEffect(() => {\n    // Update remaining points when the teams or players change\n    calculateRemainingPoints();\n  }, [formData.players, formData.teams]); // Depend on players and teams\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leader Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"leaderEmail\",\n        value: formData.leaderEmail,\n        onChange: handleChange,\n        placeholder: \"Leader Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"tournamentName\",\n        value: formData.tournamentName,\n        onChange: handleChange,\n        placeholder: \"Tournament Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"teamsCount\",\n        value: formData.teamsCount,\n        onChange: handleChange,\n        placeholder: \"Number of Teams\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"bidPointsPerTeam\",\n        value: formData.bidPointsPerTeam,\n        onChange: handleChange,\n        placeholder: \"Bid Points Per Team\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Team Names\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), formData.teams && formData.teams.map((team, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: team.name,\n            onChange: e => handleTeamChange(index, e.target.value),\n            placeholder: `Team ${index + 1} Name`,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" - Remaining Points: \", team.remainingBidPoints]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), formData.players && formData.players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: player.name,\n            onChange: e => handlePlayerChange(index, 'name', e.target.value),\n            placeholder: `Player ${index + 1} Name`,\n            required: true,\n            disabled: player.done\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => handlePlayerChange(index, 'photo', e.target.files[0]),\n            disabled: player.done\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: player.team,\n            onChange: e => handlePlayerChange(index, 'team', e.target.value),\n            disabled: player.done,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), formData.teams && formData.teams.map((team, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: team.name,\n              children: team.name\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: player.bidAmount,\n            onChange: e => handlePlayerChange(index, 'bidAmount', parseInt(e.target.value) || 0),\n            placeholder: \"Bid Amount\",\n            disabled: player.done\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleDone(index),\n            disabled: player.done || !player.team || player.bidAmount <= 0,\n            children: player.done ? 'Done' : 'Mark as Done'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addPlayer,\n          children: \"Add Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Tournament\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), submittedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tournament Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Tournament: \", submittedData.tournamentName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Teams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), submittedData.teams && submittedData.teams.map((team, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: team.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Remaining Points: \", team.remainingBidPoints]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Players\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), submittedData.players && submittedData.players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", player.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this), player.photo ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(player.photo),\n          alt: `Player ${index + 1}`,\n          width: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No photo available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Team: \", player.team]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Bid Amount: \", player.bidAmount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(LeaderDashboard, \"5eylRzguG6qMwXkgE+NSESNvgpQ=\");\n_c = LeaderDashboard;\nvar _c;\n$RefreshReg$(_c, \"LeaderDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","LeaderDashboard","_s","formData","setFormData","leaderEmail","tournamentName","teamsCount","bidPointsPerTeam","teams","players","submittedData","setSubmittedData","calculateRemainingPoints","updatedTeams","map","team","totalBidAmount","filter","player","name","reduce","sum","bidAmount","remainingPoints","bidPoints","remainingBidPoints","handleChange","e","value","target","newValue","parseInt","prevData","Array","from","length","_","index","_prevData$teams$index","handleTeamChange","handlePlayerChange","field","updatedPlayers","addPlayer","photo","done","handleDone","handleSubmit","preventDefault","response","post","auction","data","error","console","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","style","marginBottom","disabled","accept","files","idx","onClick","src","URL","createObjectURL","alt","width","_c","$RefreshReg$"],"sources":["/home/uki-jaffna/biddingweb/frontend/src/components/LeaderDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function LeaderDashboard() {\n  const [formData, setFormData] = useState({\n    leaderEmail: '',\n    tournamentName: '',\n    teamsCount: 0,\n    bidPointsPerTeam: 0,\n    teams: [],\n    players: [],\n  });\n\n  const [submittedData, setSubmittedData] = useState(null); // To hold the submitted data\n\n  // This function calculates the remaining bid points for each team\n  const calculateRemainingPoints = () => {\n    const updatedTeams = formData.teams.map((team) => {\n      // Calculate the total points spent by the team\n      const totalBidAmount = formData.players\n        .filter((player) => player.team === team.name)\n        .reduce((sum, player) => sum + player.bidAmount, 0);\n\n      // Calculate remaining points\n      const remainingPoints = team.bidPoints - totalBidAmount;\n\n      return { ...team, remainingBidPoints: remainingPoints };\n    });\n\n    // Update the teams with the new remaining points\n    setFormData({\n      ...formData,\n      teams: updatedTeams,\n    });\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    const newValue = name === 'teamsCount' || name === 'bidPointsPerTeam' ? parseInt(value) : value;\n\n    setFormData((prevData) => {\n      if (name === 'teamsCount') {\n        const updatedTeams = Array.from({ length: newValue || 0 }, (_, index) => ({\n          name: prevData.teams[index]?.name || '',\n          bidPoints: prevData.bidPointsPerTeam || 0,\n          remainingBidPoints: prevData.bidPointsPerTeam || 0,\n        }));\n        return {\n          ...prevData,\n          teamsCount: newValue,\n          teams: updatedTeams,\n        };\n      }\n\n      if (name === 'bidPointsPerTeam') {\n        const updatedTeams = prevData.teams.map((team) => ({\n          ...team,\n          bidPoints: newValue || 0,\n          remainingBidPoints: newValue || 0,\n        }));\n        return {\n          ...prevData,\n          bidPointsPerTeam: newValue,\n          teams: updatedTeams,\n        };\n      }\n\n      return {\n        ...prevData,\n        [name]: newValue,\n      };\n    });\n  };\n\n  const handleTeamChange = (index, value) => {\n    const updatedTeams = [...formData.teams];\n    updatedTeams[index] = {\n      ...updatedTeams[index],\n      name: value,\n    };\n    setFormData({\n      ...formData,\n      teams: updatedTeams,\n    });\n  };\n\n  const handlePlayerChange = (index, field, value) => {\n    const updatedPlayers = [...formData.players];\n    updatedPlayers[index] = {\n      ...updatedPlayers[index],\n      [field]: value,\n    };\n    setFormData({\n      ...formData,\n      players: updatedPlayers,\n    }, calculateRemainingPoints); // Call to update remaining points\n  };\n\n  const addPlayer = () => {\n    setFormData({\n      ...formData,\n      players: [...formData.players, { name: '', photo: null, bidAmount: 0, team: '', done: false }],\n    });\n  };\n\n  const handleDone = (index) => {\n    const updatedPlayers = [...formData.players];\n    updatedPlayers[index].done = true;\n    setFormData({\n      ...formData,\n      players: updatedPlayers,\n    }, calculateRemainingPoints); // Call to update remaining points\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Send the form data to the backend API to create the auction\n      const response = await axios.post('http://localhost:5000/api/auctions/create', formData);\n\n      // Assuming the backend returns the 'auction' object in the response\n      const { auction } = response.data;\n\n      // Update the frontend with the auction data\n      setSubmittedData(auction);\n\n      // Reset the form data after submission (optional)\n      setFormData({\n        leaderEmail: '',\n        tournamentName: '',\n        teamsCount: 0,\n        bidPointsPerTeam: 0,\n        teams: [],\n        players: [],\n      });\n    } catch (error) {\n      console.error('Error submitting tournament:', error);\n      alert('There was an error submitting the tournament.');\n    }\n  };\n\n  useEffect(() => {\n    // Update remaining points when the teams or players change\n    calculateRemainingPoints();\n  }, [formData.players, formData.teams]); // Depend on players and teams\n\n  return (\n    <div>\n      <h1>Leader Dashboard</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          name=\"leaderEmail\"\n          value={formData.leaderEmail}\n          onChange={handleChange}\n          placeholder=\"Leader Email\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"tournamentName\"\n          value={formData.tournamentName}\n          onChange={handleChange}\n          placeholder=\"Tournament Name\"\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"teamsCount\"\n          value={formData.teamsCount}\n          onChange={handleChange}\n          placeholder=\"Number of Teams\"\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"bidPointsPerTeam\"\n          value={formData.bidPointsPerTeam}\n          onChange={handleChange}\n          placeholder=\"Bid Points Per Team\"\n          required\n        />\n\n        <div>\n          <h3>Team Names</h3>\n          {formData.teams && formData.teams.map((team, index) => (\n            <div key={index}>\n              <input\n                type=\"text\"\n                value={team.name}\n                onChange={(e) => handleTeamChange(index, e.target.value)}\n                placeholder={`Team ${index + 1} Name`}\n                required\n              />\n              <span> - Remaining Points: {team.remainingBidPoints}</span>\n            </div>\n          ))}\n        </div>\n\n        <div>\n          <h3>Players</h3>\n          {formData.players && formData.players.map((player, index) => (\n            <div key={index} style={{ marginBottom: '10px' }}>\n              <input\n                type=\"text\"\n                value={player.name}\n                onChange={(e) => handlePlayerChange(index, 'name', e.target.value)}\n                placeholder={`Player ${index + 1} Name`}\n                required\n                disabled={player.done}\n              />\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={(e) => handlePlayerChange(index, 'photo', e.target.files[0])}\n                disabled={player.done}\n              />\n              <select\n                value={player.team}\n                onChange={(e) => handlePlayerChange(index, 'team', e.target.value)}\n                disabled={player.done}\n              >\n                <option value=\"\">Select Team</option>\n                {formData.teams && formData.teams.map((team, idx) => (\n                  <option key={idx} value={team.name}>\n                    {team.name}\n                  </option>\n                ))}\n              </select>\n              <input\n                type=\"number\"\n                value={player.bidAmount}\n                onChange={(e) => handlePlayerChange(index, 'bidAmount', parseInt(e.target.value) || 0)}\n                placeholder=\"Bid Amount\"\n                disabled={player.done}\n              />\n              <button\n                type=\"button\"\n                onClick={() => handleDone(index)}\n                disabled={player.done || !player.team || player.bidAmount <= 0}\n              >\n                {player.done ? 'Done' : 'Mark as Done'}\n              </button>\n            </div>\n          ))}\n          <button type=\"button\" onClick={addPlayer}>Add Player</button>\n        </div>\n\n        <button type=\"submit\">Submit Tournament</button>\n      </form>\n\n      {submittedData && (\n        <div>\n          <h2>Tournament Information</h2>\n          <h3>Tournament: {submittedData.tournamentName}</h3>\n          <h4>Teams</h4>\n          {submittedData.teams && submittedData.teams.map((team, index) => (\n            <div key={index}>\n              <h5>{team.name}</h5>\n              <p>Remaining Points: {team.remainingBidPoints}</p>\n            </div>\n          ))}\n\n          <h4>Players</h4>\n          {submittedData.players && submittedData.players.map((player, index) => (\n            <div key={index} style={{ marginBottom: '10px' }}>\n              <p>Name: {player.name}</p>\n              {player.photo ? (\n                <img\n                  src={URL.createObjectURL(player.photo)}\n                  alt={`Player ${index + 1}`}\n                  width=\"50\"\n                />\n              ) : (\n                <p>No photo available</p>\n              )}\n              <p>Team: {player.team}</p>\n              <p>Bid Amount: {player.bidAmount}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}