{"ast":null,"code":"var _jsxFileName = \"/home/uki-jaffna/biddingweb/frontend/src/components/PaymentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\n// Load your Stripe public key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_test_51QBtqRDVaxzZr2tTLGJoEtp6DLvscZPUmcUnE1ygGSieZQ3Dfn36HLZYY8uVmIAYJcvgewGetG8PxXpwpecNnyV200M4Kn2Jku');\nconst CheckoutForm = () => {\n  _s();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [succeeded, setSucceeded] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [amount] = useState(1000); // Set the amount here\n  const stripe = useStripe();\n  const elements = useElements();\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsProcessing(true);\n    setError(null);\n    if (!name || !email) {\n      setError('Please fill in all the fields.');\n      setIsProcessing(false);\n      return;\n    }\n    try {\n      // Fetch client secret from the backend with required parameters\n      const {\n        data\n      } = await axios.post('http://localhost:5000/api/payment/create-payment-intent', {\n        name,\n        email,\n        amount\n      });\n      const {\n        clientSecret\n      } = data;\n      const {\n        error,\n        paymentIntent\n      } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement),\n          billing_details: {\n            name,\n            email\n          }\n        }\n      });\n      if (error) {\n        setError(error.message);\n      } else if (paymentIntent.status === 'succeeded') {\n        setSucceeded(true);\n        navigate('/leader-dashboard', {\n          state: {\n            email,\n            message: 'Payment successful!'\n          }\n        });\n      }\n    } catch (error) {\n      setError('Failed to process payment.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Complete Your Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"payment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Full Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Email Address\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Card Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-element\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"pay-button\",\n        disabled: !stripe || isProcessing || succeeded,\n        children: isProcessing ? 'Processing…' : 'Pay ₹1500'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }, this), succeeded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: \"Payment successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(CheckoutForm, \"sa9TKuKLHvhJYNcimlDOR3wn6YM=\", false, function () {\n  return [useStripe, useElements, useNavigate];\n});\n_c = CheckoutForm;\nconst PaymentPage = () => /*#__PURE__*/_jsxDEV(Elements, {\n  stripe: stripePromise,\n  children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 105,\n  columnNumber: 5\n}, this);\n_c2 = PaymentPage;\nexport default PaymentPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"PaymentPage\");","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useStripe","useElements","useNavigate","axios","jsxDEV","_jsxDEV","stripePromise","CheckoutForm","_s","isProcessing","setIsProcessing","error","setError","succeeded","setSucceeded","name","setName","email","setEmail","amount","stripe","elements","navigate","handleSubmit","event","preventDefault","data","post","clientSecret","paymentIntent","confirmCardPayment","payment_method","card","getElement","billing_details","message","status","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","required","disabled","_c","PaymentPage","_c2","$RefreshReg$"],"sources":["/home/uki-jaffna/biddingweb/frontend/src/components/PaymentPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\n// Load your Stripe public key\nconst stripePromise = loadStripe('pk_test_51QBtqRDVaxzZr2tTLGJoEtp6DLvscZPUmcUnE1ygGSieZQ3Dfn36HLZYY8uVmIAYJcvgewGetG8PxXpwpecNnyV200M4Kn2Jku');\n\nconst CheckoutForm = () => {\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [error, setError] = useState(null);\n    const [succeeded, setSucceeded] = useState(false);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [amount] = useState(1000); // Set the amount here\n    const stripe = useStripe();\n    const elements = useElements();\n    const navigate = useNavigate();\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setIsProcessing(true);\n        setError(null);\n\n        if (!name || !email) {\n            setError('Please fill in all the fields.');\n            setIsProcessing(false);\n            return;\n        }\n\n        try {\n            // Fetch client secret from the backend with required parameters\n            const { data } = await axios.post('http://localhost:5000/api/payment/create-payment-intent', {\n                name,\n                email,\n                amount,\n            });\n            const { clientSecret } = data;\n\n            const { error, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\n                payment_method: {\n                    card: elements.getElement(CardElement),\n                    billing_details: { name, email },\n                },\n            });\n\n            if (error) {\n                setError(error.message);\n            } else if (paymentIntent.status === 'succeeded') {\n                setSucceeded(true);\n                navigate('/leader-dashboard', { state: { email, message: 'Payment successful!' } });\n            }\n        } catch (error) {\n            setError('Failed to process payment.');\n        } finally {\n            setIsProcessing(false);\n        }\n    };\n\n    return (\n        <div className=\"payment-page\">\n            <h2>Complete Your Payment</h2>\n            <form onSubmit={handleSubmit} className=\"payment-form\">\n                <div className=\"form-group\">\n                    <label>Name</label>\n                    <input \n                        type=\"text\" \n                        value={name} \n                        onChange={(e) => setName(e.target.value)} \n                        placeholder=\"Full Name\" \n                        required \n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Email</label>\n                    <input \n                        type=\"email\" \n                        value={email} \n                        onChange={(e) => setEmail(e.target.value)} \n                        placeholder=\"Email Address\" \n                        required \n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Card Details</label>\n                    <div className=\"card-element\">\n                        <CardElement />\n                    </div>\n                </div>\n                <button \n                    type=\"submit\" \n                    className=\"pay-button\" \n                    disabled={!stripe || isProcessing || succeeded}>\n                    {isProcessing ? 'Processing…' : 'Pay ₹1500'}\n                </button>\n            </form>\n            {error && <div className=\"error-message\">{error}</div>}\n            {succeeded && <div className=\"success-message\">Payment successful!</div>}\n        </div>\n    );\n};\n\nconst PaymentPage = () => (\n    <Elements stripe={stripePromise}>\n        <CheckoutForm />\n    </Elements>\n);\n\nexport default PaymentPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}